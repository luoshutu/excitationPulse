; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\gti2c.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gti2c.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -IF:\excitationPulse\Ver_F8_翻页\RTE -ID:\Keil_v5\MDK\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\gti2c.crf user\gti2c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GT_Delay PROC
;;;7      //控制I2C速度的延时
;;;8      void GT_Delay(void)
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	delay_us(1);
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       delay_us
;;;11     } 
000008  bd10              POP      {r4,pc}
;;;12     
                          ENDP

                  GT_I2C_Init PROC
;;;13     //电容触摸芯片GT9147 的I2C接口初始化
;;;14     void GT_I2C_Init(void)
00000a  b508              PUSH     {r3,lr}
;;;15     {					     
;;;16     	GPIO_InitTypeDef GPIO_InitStructure;
;;;17     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5|GPIO_Pin_6;				                 //LED1
00000c  2060              MOVS     r0,#0x60
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;18     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;19     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;20     	GPIO_Init(GPIOA, &GPIO_InitStructure);	 
00001e  4669              MOV      r1,sp
000020  4873              LDR      r0,|L1.496|
000022  f7fffffe          BL       GPIO_Init
;;;21     
;;;22     	GPIO_SetBits(GPIOA, GPIO_Pin_5);	   //
000026  2120              MOVS     r1,#0x20
000028  4871              LDR      r0,|L1.496|
00002a  f7fffffe          BL       GPIO_SetBits
;;;23     	GPIO_SetBits(GPIOA, GPIO_Pin_6);
00002e  2140              MOVS     r1,#0x40
000030  486f              LDR      r0,|L1.496|
000032  f7fffffe          BL       GPIO_SetBits
;;;24     }
000036  bd08              POP      {r3,pc}
;;;25     //产生I2C起始信号
                          ENDP

                  GT_I2C_Start PROC
;;;26     void GT_I2C_Start(void)
000038  b510              PUSH     {r4,lr}
;;;27     {
;;;28     	GT_SDA_OUT();     //sda线输出
00003a  f7fffffe          BL       GT_SDA_OUT
;;;29     	GT_I2C_SDA_H;	  	  
00003e  2140              MOVS     r1,#0x40
000040  486b              LDR      r0,|L1.496|
000042  f7fffffe          BL       GPIO_SetBits
;;;30     	GT_I2C_SCL_H;
000046  2120              MOVS     r1,#0x20
000048  4869              LDR      r0,|L1.496|
00004a  f7fffffe          BL       GPIO_SetBits
;;;31     	delay_us(3);
00004e  2003              MOVS     r0,#3
000050  f7fffffe          BL       delay_us
;;;32      	GT_I2C_SDA_L;     
000054  2140              MOVS     r1,#0x40
000056  4866              LDR      r0,|L1.496|
000058  f7fffffe          BL       GPIO_ResetBits
;;;33     	GT_Delay();
00005c  f7fffffe          BL       GT_Delay
;;;34     	GT_I2C_SCL_L;     
000060  2120              MOVS     r1,#0x20
000062  4863              LDR      r0,|L1.496|
000064  f7fffffe          BL       GPIO_ResetBits
;;;35     }	  
000068  bd10              POP      {r4,pc}
;;;36     //产生I2C停止信号
                          ENDP

                  GT_I2C_Stop PROC
;;;37     void GT_I2C_Stop(void)
00006a  b510              PUSH     {r4,lr}
;;;38     {
;;;39     	GT_SDA_OUT();//sda线输出
00006c  f7fffffe          BL       GT_SDA_OUT
;;;40     	GT_I2C_SCL_H;
000070  2120              MOVS     r1,#0x20
000072  485f              LDR      r0,|L1.496|
000074  f7fffffe          BL       GPIO_SetBits
;;;41     	delay_us(3);
000078  2003              MOVS     r0,#3
00007a  f7fffffe          BL       delay_us
;;;42     	GT_I2C_SDA_L;
00007e  2140              MOVS     r1,#0x40
000080  485b              LDR      r0,|L1.496|
000082  f7fffffe          BL       GPIO_ResetBits
;;;43     	GT_Delay();
000086  f7fffffe          BL       GT_Delay
;;;44     	GT_I2C_SDA_H;
00008a  2140              MOVS     r1,#0x40
00008c  4858              LDR      r0,|L1.496|
00008e  f7fffffe          BL       GPIO_SetBits
;;;45     }
000092  bd10              POP      {r4,pc}
;;;46     //等待应答信号到来
                          ENDP

                  GT_I2C_Wait_Ack PROC
;;;48     //        0，接收应答成功
;;;49     u8 GT_I2C_Wait_Ack(void)
000094  b510              PUSH     {r4,lr}
;;;50     {
;;;51     	u8 ucErrTime=0;
000096  2400              MOVS     r4,#0
;;;52     	GT_SDA_IN();      //SDA设置为输入  
000098  f7fffffe          BL       GT_SDA_IN
;;;53     	GT_I2C_SDA_H;	   
00009c  2140              MOVS     r1,#0x40
00009e  4854              LDR      r0,|L1.496|
0000a0  f7fffffe          BL       GPIO_SetBits
;;;54     	GT_I2C_SCL_H;
0000a4  2120              MOVS     r1,#0x20
0000a6  4852              LDR      r0,|L1.496|
0000a8  f7fffffe          BL       GPIO_SetBits
;;;55     	GT_Delay();
0000ac  f7fffffe          BL       GT_Delay
;;;56     	while(GT_READ_SDA)
0000b0  e009              B        |L1.198|
                  |L1.178|
;;;57     	{
;;;58     		ucErrTime++;
0000b2  1c60              ADDS     r0,r4,#1
0000b4  b2c4              UXTB     r4,r0
;;;59     		if(ucErrTime>250)
0000b6  2cfa              CMP      r4,#0xfa
0000b8  dd03              BLE      |L1.194|
;;;60     		{
;;;61     			GT_I2C_Stop();
0000ba  f7fffffe          BL       GT_I2C_Stop
;;;62     			return 1;
0000be  2001              MOVS     r0,#1
                  |L1.192|
;;;63     		} 
;;;64     		GT_Delay();
;;;65     	}
;;;66     	GT_I2C_SCL_L;//时钟输出0 	   
;;;67     	return 0;  
;;;68     } 
0000c0  bd10              POP      {r4,pc}
                  |L1.194|
0000c2  f7fffffe          BL       GT_Delay
                  |L1.198|
0000c6  2140              MOVS     r1,#0x40              ;56
0000c8  4849              LDR      r0,|L1.496|
0000ca  f7fffffe          BL       GPIO_ReadInputDataBit
0000ce  2800              CMP      r0,#0                 ;56
0000d0  d1ef              BNE      |L1.178|
0000d2  2120              MOVS     r1,#0x20              ;66
0000d4  4846              LDR      r0,|L1.496|
0000d6  f7fffffe          BL       GPIO_ResetBits
0000da  2000              MOVS     r0,#0                 ;67
0000dc  e7f0              B        |L1.192|
;;;69     //产生ACK应答
                          ENDP

                  GT_I2C_Ack PROC
;;;70     void GT_I2C_Ack(void)
0000de  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	GT_I2C_SCL_L;
0000e0  2120              MOVS     r1,#0x20
0000e2  4843              LDR      r0,|L1.496|
0000e4  f7fffffe          BL       GPIO_ResetBits
;;;73     	GT_SDA_OUT();
0000e8  f7fffffe          BL       GT_SDA_OUT
;;;74     	GT_Delay();
0000ec  f7fffffe          BL       GT_Delay
;;;75     	GT_I2C_SDA_L;
0000f0  2140              MOVS     r1,#0x40
0000f2  483f              LDR      r0,|L1.496|
0000f4  f7fffffe          BL       GPIO_ResetBits
;;;76     	GT_Delay();
0000f8  f7fffffe          BL       GT_Delay
;;;77     	GT_I2C_SCL_H;
0000fc  2120              MOVS     r1,#0x20
0000fe  483c              LDR      r0,|L1.496|
000100  f7fffffe          BL       GPIO_SetBits
;;;78     	GT_Delay();
000104  f7fffffe          BL       GT_Delay
;;;79     	GT_I2C_SCL_L;
000108  2120              MOVS     r1,#0x20
00010a  4839              LDR      r0,|L1.496|
00010c  f7fffffe          BL       GPIO_ResetBits
;;;80     }
000110  bd10              POP      {r4,pc}
;;;81     //不产生ACK应答		    
                          ENDP

                  GT_I2C_NAck PROC
;;;82     void GT_I2C_NAck(void)
000112  b510              PUSH     {r4,lr}
;;;83     {
;;;84     	GT_I2C_SCL_L;
000114  2120              MOVS     r1,#0x20
000116  4836              LDR      r0,|L1.496|
000118  f7fffffe          BL       GPIO_ResetBits
;;;85     	GT_SDA_OUT();
00011c  f7fffffe          BL       GT_SDA_OUT
;;;86     	GT_Delay();
000120  f7fffffe          BL       GT_Delay
;;;87     	GT_I2C_SDA_H;
000124  2140              MOVS     r1,#0x40
000126  4832              LDR      r0,|L1.496|
000128  f7fffffe          BL       GPIO_SetBits
;;;88     	GT_Delay();
00012c  f7fffffe          BL       GT_Delay
;;;89     	GT_I2C_SCL_H;
000130  2120              MOVS     r1,#0x20
000132  482f              LDR      r0,|L1.496|
000134  f7fffffe          BL       GPIO_SetBits
;;;90     	GT_Delay();
000138  f7fffffe          BL       GT_Delay
;;;91     	GT_I2C_SCL_L;
00013c  2120              MOVS     r1,#0x20
00013e  482c              LDR      r0,|L1.496|
000140  f7fffffe          BL       GPIO_ResetBits
;;;92     }					 				     
000144  bd10              POP      {r4,pc}
;;;93     //I2C发送一个字节
                          ENDP

                  GT_I2C_Send_Byte PROC
;;;96     //0，无应答			  
;;;97     void GT_I2C_Send_Byte(u8 txd)
000146  b570              PUSH     {r4-r6,lr}
;;;98     {                        
000148  4604              MOV      r4,r0
;;;99       u8 t;   
;;;100    	GT_SDA_OUT(); 	    
00014a  f7fffffe          BL       GT_SDA_OUT
;;;101      GT_I2C_SCL_L;//拉低时钟开始数据传输
00014e  2120              MOVS     r1,#0x20
000150  4827              LDR      r0,|L1.496|
000152  f7fffffe          BL       GPIO_ResetBits
;;;102    	GT_Delay();
000156  f7fffffe          BL       GT_Delay
;;;103    	for(t=0;t<8;t++)
00015a  2500              MOVS     r5,#0
00015c  e01b              B        |L1.406|
                  |L1.350|
;;;104        {              
;;;105    			if(txd&0x80) GT_I2C_SDA_H;
00015e  f0040080          AND      r0,r4,#0x80
000162  b120              CBZ      r0,|L1.366|
000164  2140              MOVS     r1,#0x40
000166  4822              LDR      r0,|L1.496|
000168  f7fffffe          BL       GPIO_SetBits
00016c  e003              B        |L1.374|
                  |L1.366|
;;;106    			else GT_I2C_SDA_L;
00016e  2140              MOVS     r1,#0x40
000170  481f              LDR      r0,|L1.496|
000172  f7fffffe          BL       GPIO_ResetBits
                  |L1.374|
;;;107    			txd<<=1; 	      
000176  0660              LSLS     r0,r4,#25
000178  0e04              LSRS     r4,r0,#24
;;;108    			GT_I2C_SCL_H; 
00017a  2120              MOVS     r1,#0x20
00017c  481c              LDR      r0,|L1.496|
00017e  f7fffffe          BL       GPIO_SetBits
;;;109    			GT_Delay();
000182  f7fffffe          BL       GT_Delay
;;;110    			GT_I2C_SCL_L;	
000186  2120              MOVS     r1,#0x20
000188  4819              LDR      r0,|L1.496|
00018a  f7fffffe          BL       GPIO_ResetBits
;;;111    			GT_Delay();
00018e  f7fffffe          BL       GT_Delay
000192  1c68              ADDS     r0,r5,#1              ;103
000194  b2c5              UXTB     r5,r0                 ;103
                  |L1.406|
000196  2d08              CMP      r5,#8                 ;103
000198  dbe1              BLT      |L1.350|
;;;112        }	 
;;;113    } 	    
00019a  bd70              POP      {r4-r6,pc}
;;;114    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

                  GT_I2C_Read_Byte PROC
;;;115    u8 GT_I2C_Read_Byte(unsigned char ack)
00019c  b570              PUSH     {r4-r6,lr}
;;;116    {
00019e  4605              MOV      r5,r0
;;;117    	u8 i,receive=0;
0001a0  2400              MOVS     r4,#0
;;;118     	GT_SDA_IN();//SDA设置为输入
0001a2  f7fffffe          BL       GT_SDA_IN
;;;119    	delay_us(1);
0001a6  2001              MOVS     r0,#1
0001a8  f7fffffe          BL       delay_us
;;;120    	for(i=0;i<8;i++ )
0001ac  2600              MOVS     r6,#0
0001ae  e014              B        |L1.474|
                  |L1.432|
;;;121    	{ 
;;;122    		GT_I2C_SCL_L; 	    	   
0001b0  2120              MOVS     r1,#0x20
0001b2  480f              LDR      r0,|L1.496|
0001b4  f7fffffe          BL       GPIO_ResetBits
;;;123    		GT_Delay();
0001b8  f7fffffe          BL       GT_Delay
;;;124    		GT_I2C_SCL_H;	 
0001bc  2120              MOVS     r1,#0x20
0001be  480c              LDR      r0,|L1.496|
0001c0  f7fffffe          BL       GPIO_SetBits
;;;125    		receive<<=1;
0001c4  0660              LSLS     r0,r4,#25
0001c6  0e04              LSRS     r4,r0,#24
;;;126    		if(GT_READ_SDA)receive++;   
0001c8  2140              MOVS     r1,#0x40
0001ca  4809              LDR      r0,|L1.496|
0001cc  f7fffffe          BL       GPIO_ReadInputDataBit
0001d0  b108              CBZ      r0,|L1.470|
0001d2  1c60              ADDS     r0,r4,#1
0001d4  b2c4              UXTB     r4,r0
                  |L1.470|
0001d6  1c70              ADDS     r0,r6,#1              ;120
0001d8  b2c6              UXTB     r6,r0                 ;120
                  |L1.474|
0001da  2e08              CMP      r6,#8                 ;120
0001dc  dbe8              BLT      |L1.432|
;;;127    	}	  				 
;;;128    	if (!ack)GT_I2C_NAck();   //发送nACK
0001de  b915              CBNZ     r5,|L1.486|
0001e0  f7fffffe          BL       GT_I2C_NAck
0001e4  e001              B        |L1.490|
                  |L1.486|
;;;129    	else GT_I2C_Ack();        //发送ACK   
0001e6  f7fffffe          BL       GT_I2C_Ack
                  |L1.490|
;;;130     	return receive;
0001ea  4620              MOV      r0,r4
;;;131    }
0001ec  bd70              POP      {r4-r6,pc}
;;;132    /******************* (C) COPYRIGHT 2015 奋斗STM32 *****END OF FILE****/
                          ENDP

0001ee  0000              DCW      0x0000
                  |L1.496|
                          DCD      0x40010800
