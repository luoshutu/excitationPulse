; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -IF:\excitationPulse\Ver_F8_翻页\RTE -ID:\Keil_v5\MDK\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\main.crf user\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIO_Configuration PROC
;;;217    ****************************************************************************/ 
;;;218    void GPIO_Configuration(void)
000000  b508              PUSH     {r3,lr}
;;;219    {
;;;220      GPIO_InitTypeDef GPIO_InitStructure;
;;;221    	
;;;222    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;				     
000002  2004              MOVS     r0,#4
000004  f8ad0000          STRH     r0,[sp,#0]
;;;223      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;			 //通用推挽输出模式
000008  2010              MOVS     r0,#0x10
00000a  f88d0003          STRB     r0,[sp,#3]
;;;224      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
00000e  2003              MOVS     r0,#3
000010  f88d0002          STRB     r0,[sp,#2]
;;;225      GPIO_Init(GPIOA, &GPIO_InitStructure); 
000014  4669              MOV      r1,sp
000016  48cb              LDR      r0,|L1.836|
000018  f7fffffe          BL       GPIO_Init
;;;226    	
;;;227    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_8 | GPIO_Pin_12 | GPIO_Pin_14 | GPIO_Pin_15;				    
00001c  f24d1001          MOV      r0,#0xd101
000020  f8ad0000          STRH     r0,[sp,#0]
;;;228      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;			 //通用推挽输出模式
000024  2010              MOVS     r0,#0x10
000026  f88d0003          STRB     r0,[sp,#3]
;;;229      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
00002a  2003              MOVS     r0,#3
00002c  f88d0002          STRB     r0,[sp,#2]
;;;230      GPIO_Init(GPIOB, &GPIO_InitStructure); 
000030  4669              MOV      r1,sp
000032  48c5              LDR      r0,|L1.840|
000034  f7fffffe          BL       GPIO_Init
;;;231    	
;;;232    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | 
000038  20ff              MOVS     r0,#0xff
00003a  f8ad0000          STRH     r0,[sp,#0]
;;;233    	GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;				   
;;;234    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;			 //通用推挽输出模式
00003e  2010              MOVS     r0,#0x10
000040  f88d0003          STRB     r0,[sp,#3]
;;;235      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
000044  2003              MOVS     r0,#3
000046  f88d0002          STRB     r0,[sp,#2]
;;;236      GPIO_Init(GPIOC, &GPIO_InitStructure); 
00004a  4669              MOV      r1,sp
00004c  48bf              LDR      r0,|L1.844|
00004e  f7fffffe          BL       GPIO_Init
;;;237    
;;;238    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;				     
000052  2008              MOVS     r0,#8
000054  f8ad0000          STRH     r0,[sp,#0]
;;;239      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;			 //通用推挽输出模式
000058  2010              MOVS     r0,#0x10
00005a  f88d0003          STRB     r0,[sp,#3]
;;;240      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
00005e  2003              MOVS     r0,#3
000060  f88d0002          STRB     r0,[sp,#2]
;;;241      GPIO_Init(GPIOD, &GPIO_InitStructure); 
000064  4669              MOV      r1,sp
000066  48ba              LDR      r0,|L1.848|
000068  f7fffffe          BL       GPIO_Init
;;;242    
;;;243    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00006c  2001              MOVS     r0,#1
00006e  f8ad0000          STRH     r0,[sp,#0]
;;;244      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;			 //通用推挽输出模式
000072  2010              MOVS     r0,#0x10
000074  f88d0003          STRB     r0,[sp,#3]
;;;245      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
000078  2003              MOVS     r0,#3
00007a  f88d0002          STRB     r0,[sp,#2]
;;;246      GPIO_Init(GPIOE, &GPIO_InitStructure); 
00007e  4669              MOV      r1,sp
000080  48b4              LDR      r0,|L1.852|
000082  f7fffffe          BL       GPIO_Init
;;;247    	
;;;248    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;				    
000086  f44f7000          MOV      r0,#0x200
00008a  f8ad0000          STRH     r0,[sp,#0]
;;;249      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;			 //复用推挽输出模式
00008e  2018              MOVS     r0,#0x18
000090  f88d0003          STRB     r0,[sp,#3]
;;;250      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			 //输出模式最大速度50MHz
000094  2003              MOVS     r0,#3
000096  f88d0002          STRB     r0,[sp,#2]
;;;251      GPIO_Init(GPIOB, &GPIO_InitStructure); 
00009a  4669              MOV      r1,sp
00009c  48aa              LDR      r0,|L1.840|
00009e  f7fffffe          BL       GPIO_Init
;;;252    	GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3 , ENABLE);		
0000a2  2101              MOVS     r1,#1
0000a4  48ac              LDR      r0,|L1.856|
0000a6  f7fffffe          BL       GPIO_PinRemapConfig
;;;253    	
;;;254      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;				 //触摸检测引脚
0000aa  2040              MOVS     r0,#0x40
0000ac  f8ad0000          STRH     r0,[sp,#0]
;;;255      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
0000b0  2048              MOVS     r0,#0x48
0000b2  f88d0003          STRB     r0,[sp,#3]
;;;256      GPIO_Init(GPIOB, &GPIO_InitStructure);
0000b6  4669              MOV      r1,sp
0000b8  48a3              LDR      r0,|L1.840|
0000ba  f7fffffe          BL       GPIO_Init
;;;257    	
;;;258    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6;				
0000be  2060              MOVS     r0,#0x60
0000c0  f8ad0000          STRH     r0,[sp,#0]
;;;259      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;		//浮空输入
0000c4  2004              MOVS     r0,#4
0000c6  f88d0003          STRB     r0,[sp,#3]
;;;260      GPIO_Init(GPIOE, &GPIO_InitStructure); 
0000ca  4669              MOV      r1,sp
0000cc  48a1              LDR      r0,|L1.852|
0000ce  f7fffffe          BL       GPIO_Init
;;;261    }
0000d2  bd08              POP      {r3,pc}
;;;262    
                          ENDP

                  NVIC_Configuration PROC
;;;189    ****************************************************************************/ 
;;;190    void NVIC_Configuration(void)
0000d4  b51c              PUSH     {r2-r4,lr}
;;;191    {
;;;192      NVIC_InitTypeDef NVIC_InitStructure_TIM3;
;;;193    	NVIC_InitTypeDef NVIC_InitStructure_TIM2;
;;;194    	
;;;195      NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
0000d6  f44f60e0          MOV      r0,#0x700
0000da  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;196    
;;;197      NVIC_InitStructure_TIM3.NVIC_IRQChannel =TIM3_IRQn ;			   //配置定时器中断 
0000de  201d              MOVS     r0,#0x1d
0000e0  f88d0004          STRB     r0,[sp,#4]
;;;198    	NVIC_InitStructure_TIM2.NVIC_IRQChannel =TIM2_IRQn ;
0000e4  201c              MOVS     r0,#0x1c
0000e6  f88d0000          STRB     r0,[sp,#0]
;;;199    	
;;;200      NVIC_InitStructure_TIM3.NVIC_IRQChannelPreemptionPriority = 0;
0000ea  2000              MOVS     r0,#0
0000ec  f88d0005          STRB     r0,[sp,#5]
;;;201      NVIC_InitStructure_TIM3.NVIC_IRQChannelSubPriority = 0;
0000f0  f88d0006          STRB     r0,[sp,#6]
;;;202      NVIC_InitStructure_TIM3.NVIC_IRQChannelCmd = ENABLE;
0000f4  2001              MOVS     r0,#1
0000f6  f88d0007          STRB     r0,[sp,#7]
;;;203      NVIC_Init(&NVIC_InitStructure_TIM3);  
0000fa  a801              ADD      r0,sp,#4
0000fc  f7fffffe          BL       NVIC_Init
;;;204    
;;;205      NVIC_InitStructure_TIM2.NVIC_IRQChannelPreemptionPriority = 0;
000100  2000              MOVS     r0,#0
000102  f88d0001          STRB     r0,[sp,#1]
;;;206      NVIC_InitStructure_TIM2.NVIC_IRQChannelSubPriority = 0;
000106  f88d0002          STRB     r0,[sp,#2]
;;;207      NVIC_InitStructure_TIM2.NVIC_IRQChannelCmd = ENABLE;
00010a  2001              MOVS     r0,#1
00010c  f88d0003          STRB     r0,[sp,#3]
;;;208      NVIC_Init(&NVIC_InitStructure_TIM2);
000110  4668              MOV      r0,sp
000112  f7fffffe          BL       NVIC_Init
;;;209    }
000116  bd1c              POP      {r2-r4,pc}
;;;210    /****************************************************************************
                          ENDP

                  RCC_Configuration PROC
;;;171    ****************************************************************************/ 
;;;172    void RCC_Configuration(void){
000118  b510              PUSH     {r4,lr}
;;;173    
;;;174      SystemInit(); 
00011a  f7fffffe          BL       SystemInit
;;;175    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
00011e  2101              MOVS     r1,#1
000120  4608              MOV      r0,r1
000122  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;176      RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
000126  2101              MOVS     r1,#1
000128  4608              MOV      r0,r1
00012a  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;177      RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1 , ENABLE);
00012e  2101              MOVS     r1,#1
000130  0248              LSLS     r0,r1,#9
000132  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;178      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC 
000136  2101              MOVS     r1,#1
000138  207c              MOVS     r0,#0x7c
00013a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;179      						| RCC_APB2Periph_GPIOD| RCC_APB2Periph_GPIOE , ENABLE);
;;;180    
;;;181    } 
00013e  bd10              POP      {r4,pc}
;;;182    /****************************************************************************
                          ENDP

                  main PROC
;;;39     ****************************************************************************/  
;;;40     int main(void)
000140  b508              PUSH     {r3,lr}
;;;41     {
;;;42     	unsigned char res     = 0;		 //触摸标志位
000142  2400              MOVS     r4,#0
;;;43     	unsigned char setFlag = 0;		 //脉冲设置标志位
000144  2500              MOVS     r5,#0
;;;44     	
;;;45     	RCC_Configuration();  	       //系统时钟初始化及端口外设时钟使能
000146  f7fffffe          BL       RCC_Configuration
;;;46     	NVIC_Configuration();					 //中断源配置
00014a  f7fffffe          BL       NVIC_Configuration
;;;47     	Time_init();                   //定时器初始化
00014e  f7fffffe          BL       Time_init
;;;48       GPIO_Configuration();			     //GPIO设置
000152  f7fffffe          BL       GPIO_Configuration
;;;49       RCC_MCOConfig(RCC_MCO_PLLCLK_Div2); 	
000156  2007              MOVS     r0,#7
000158  f7fffffe          BL       RCC_MCOConfig
;;;50     	MCP_I2C_Init();                //MCP IIC初始化
00015c  f7fffffe          BL       MCP_I2C_Init
;;;51       FSMC_LCD_Init();				       //FSMC TFT接口初始化 
000160  f7fffffe          BL       FSMC_LCD_Init
;;;52       LCD_Init_SD();					       //LCD初始化代码
000164  f7fffffe          BL       LCD_Init_SD
;;;53     	GT9147_Init();                 //触摸芯片初始化
000168  f7fffffe          BL       GT9147_Init
;;;54     	ADC_Configuration();           //AD初始化
00016c  f7fffffe          BL       ADC_Configuration
;;;55     
;;;56     	SD_TEST();                     //SD卡检测
000170  f7fffffe          BL       SD_TEST
;;;57     	OutPutFile('2');               //显示界面图形
000174  2032              MOVS     r0,#0x32
000176  f7fffffe          BL       OutPutFile
;;;58     	SysInit();                     //系统输出初始化
00017a  f7fffffe          BL       SysInit
;;;59     	ShowInterfaceTwo();
00017e  f7fffffe          BL       ShowInterfaceTwo
;;;60     	
;;;61       while(1)                              
000182  e0de              B        |L1.834|
                  |L1.388|
;;;62       { 
;;;63     		//POINT_COLOR = 0;
;;;64     		//TFT_ShowString(396,250," SET ",WHITE);
;;;65     		res = GT9147_Scan();        //触摸检测
000184  f7fffffe          BL       GT9147_Scan
000188  4604              MOV      r4,r0
;;;66     		if(res) 
00018a  b1e4              CBZ      r4,|L1.454|
;;;67     		{
;;;68     			if(Page == '0')
00018c  4873              LDR      r0,|L1.860|
00018e  7800              LDRB     r0,[r0,#0]  ; Page
000190  2830              CMP      r0,#0x30
000192  d105              BNE      |L1.416|
;;;69     				TouchHandle_PageOne(TP_P[0][0],TP_P[0][1]);  //检测到触摸则进行处理
000194  4a72              LDR      r2,|L1.864|
000196  8851              LDRH     r1,[r2,#2]  ; TP_P
000198  8810              LDRH     r0,[r2,#0]  ; TP_P
00019a  f7fffffe          BL       TouchHandle_PageOne
00019e  e008              B        |L1.434|
                  |L1.416|
;;;70     			else if(Page == '1')
0001a0  486e              LDR      r0,|L1.860|
0001a2  7800              LDRB     r0,[r0,#0]  ; Page
0001a4  2831              CMP      r0,#0x31
0001a6  d104              BNE      |L1.434|
;;;71     				TouchHandle_PageTwo(TP_P[0][0],TP_P[0][1]);
0001a8  4a6d              LDR      r2,|L1.864|
0001aa  8851              LDRH     r1,[r2,#2]  ; TP_P
0001ac  8810              LDRH     r0,[r2,#0]  ; TP_P
0001ae  f7fffffe          BL       TouchHandle_PageTwo
                  |L1.434|
;;;72     			//防止误触
;;;73     			do{
0001b2  bf00              NOP      
                  |L1.436|
;;;74     			res = GT9147_Scan();
0001b4  f7fffffe          BL       GT9147_Scan
0001b8  4604              MOV      r4,r0
;;;75     			}while(res);
0001ba  2c00              CMP      r4,#0
0001bc  d1fa              BNE      |L1.436|
;;;76     			Delay(0xaaaa); 
0001be  f64a20aa          MOV      r0,#0xaaaa
0001c2  f7fffffe          BL       Delay
                  |L1.454|
;;;77     		}
;;;78     		setFlag = set_flag();
0001c6  f7fffffe          BL       set_flag
0001ca  4605              MOV      r5,r0
;;;79     		if(!setFlag);
0001cc  2d00              CMP      r5,#0
0001ce  d079              BEQ      |L1.708|
;;;80     		else if(KeyStart)   //Start
0001d0  2120              MOVS     r1,#0x20
0001d2  4860              LDR      r0,|L1.852|
0001d4  f7fffffe          BL       GPIO_ReadInputDataBit
0001d8  2800              CMP      r0,#0
0001da  d17e              BNE      |L1.730|
;;;81     		{		  
;;;82     	  	Delay(0x3ffff);										  
0001dc  4861              LDR      r0,|L1.868|
0001de  f7fffffe          BL       Delay
;;;83     			if(KeyStart)
0001e2  2120              MOVS     r1,#0x20
0001e4  485b              LDR      r0,|L1.852|
0001e6  f7fffffe          BL       GPIO_ReadInputDataBit
0001ea  2800              CMP      r0,#0
0001ec  d175              BNE      |L1.730|
;;;84     			{		  //按键消抖动
;;;85     				while(KeyStart);//是否松开按键
0001ee  bf00              NOP      
                  |L1.496|
0001f0  2120              MOVS     r1,#0x20
0001f2  4858              LDR      r0,|L1.852|
0001f4  f7fffffe          BL       GPIO_ReadInputDataBit
0001f8  2800              CMP      r0,#0
0001fa  d0f9              BEQ      |L1.496|
;;;86     				//POINT_COLOR = 0;
;;;87     				//TFT_ShowString(396,250," WORK ",WHITE);
;;;88     				TimCount = 0;        //倒计时开始
0001fc  2000              MOVS     r0,#0
0001fe  495a              LDR      r1,|L1.872|
000200  6008              STR      r0,[r1,#0]  ; TimCount
;;;89     				Clear();
000202  f7fffffe          BL       Clear
;;;90     				WorkMark();
000206  f7fffffe          BL       WorkMark
;;;91     				PowerEnable;
00020a  2101              MOVS     r1,#1
00020c  4851              LDR      r0,|L1.852|
00020e  f7fffffe          BL       GPIO_SetBits
;;;92     				Delay(0x3ffff);
000212  4854              LDR      r0,|L1.868|
000214  f7fffffe          BL       Delay
;;;93     				while(1)
000218  e05d              B        |L1.726|
                  |L1.538|
;;;94     				{	
;;;95     					if(TimCount>600000)    //判断工作时间是否到达30min，若是则停止脉冲发射
00021a  4853              LDR      r0,|L1.872|
00021c  6800              LDR      r0,[r0,#0]  ; TimCount
00021e  4953              LDR      r1,|L1.876|
000220  4288              CMP      r0,r1
000222  dd22              BLE      |L1.618|
;;;96     					{
;;;97     						TimCount = 0;
000224  2000              MOVS     r0,#0
000226  4950              LDR      r1,|L1.872|
000228  6008              STR      r0,[r1,#0]  ; TimCount
;;;98     						PowerNEnable;
00022a  2101              MOVS     r1,#1
00022c  4849              LDR      r0,|L1.852|
00022e  f7fffffe          BL       GPIO_ResetBits
;;;99     						Clear();
000232  f7fffffe          BL       Clear
;;;100    						if(Page == '0')
000236  4849              LDR      r0,|L1.860|
000238  7800              LDRB     r0,[r0,#0]  ; Page
00023a  2830              CMP      r0,#0x30
00023c  d10e              BNE      |L1.604|
;;;101    						{
;;;102    							ReadyMark();
00023e  f7fffffe          BL       ReadyMark
;;;103    							TouchHandle_PageOne(100,60);
000242  213c              MOVS     r1,#0x3c
000244  2064              MOVS     r0,#0x64
000246  f7fffffe          BL       TouchHandle_PageOne
;;;104    							FillColor(52,56,65,70,BLUE);
00024a  201f              MOVS     r0,#0x1f
00024c  2346              MOVS     r3,#0x46
00024e  2241              MOVS     r2,#0x41
000250  2138              MOVS     r1,#0x38
000252  9000              STR      r0,[sp,#0]
000254  2034              MOVS     r0,#0x34
000256  f7fffffe          BL       FillColor
00025a  e005              B        |L1.616|
                  |L1.604|
;;;105    						}
;;;106    						else if(Page == '1')
00025c  483f              LDR      r0,|L1.860|
00025e  7800              LDRB     r0,[r0,#0]  ; Page
000260  2831              CMP      r0,#0x31
000262  d101              BNE      |L1.616|
;;;107    						{
;;;108    							ReadyMark();
000264  f7fffffe          BL       ReadyMark
                  |L1.616|
;;;109    						}					
;;;110    						//TFT_ShowString(396,250," SET ",WHITE);
;;;111    						break;
000268  e036              B        |L1.728|
                  |L1.618|
;;;112    					}					
;;;113    					else if(KeyStart)  //Stop
00026a  2120              MOVS     r1,#0x20
00026c  4839              LDR      r0,|L1.852|
00026e  f7fffffe          BL       GPIO_ReadInputDataBit
000272  bb40              CBNZ     r0,|L1.710|
;;;114    					{		   
;;;115    						Delay(0x3ffff);										  
000274  483b              LDR      r0,|L1.868|
000276  f7fffffe          BL       Delay
;;;116    						if(KeyStart)
00027a  2120              MOVS     r1,#0x20
00027c  4835              LDR      r0,|L1.852|
00027e  f7fffffe          BL       GPIO_ReadInputDataBit
000282  bb00              CBNZ     r0,|L1.710|
;;;117    						{		  //按键消抖动
;;;118    							while(KeyStart);//是否松开按键
000284  bf00              NOP      
                  |L1.646|
000286  2120              MOVS     r1,#0x20
000288  4832              LDR      r0,|L1.852|
00028a  f7fffffe          BL       GPIO_ReadInputDataBit
00028e  2800              CMP      r0,#0
000290  d0f9              BEQ      |L1.646|
;;;119    							PowerNEnable;
000292  2101              MOVS     r1,#1
000294  482f              LDR      r0,|L1.852|
000296  f7fffffe          BL       GPIO_ResetBits
;;;120    							Clear();
00029a  f7fffffe          BL       Clear
;;;121    							if(Page == '0')
00029e  482f              LDR      r0,|L1.860|
0002a0  7800              LDRB     r0,[r0,#0]  ; Page
0002a2  2830              CMP      r0,#0x30
0002a4  d110              BNE      |L1.712|
;;;122    							{
;;;123    								ReadyMark();
0002a6  f7fffffe          BL       ReadyMark
;;;124    								TouchHandle_PageOne(100,60);
0002aa  213c              MOVS     r1,#0x3c
0002ac  2064              MOVS     r0,#0x64
0002ae  f7fffffe          BL       TouchHandle_PageOne
;;;125    								FillColor(52,56,65,70,BLUE);
0002b2  201f              MOVS     r0,#0x1f
0002b4  2346              MOVS     r3,#0x46
0002b6  2241              MOVS     r2,#0x41
0002b8  2138              MOVS     r1,#0x38
0002ba  9000              STR      r0,[sp,#0]
0002bc  2034              MOVS     r0,#0x34
0002be  f7fffffe          BL       FillColor
0002c2  e007              B        |L1.724|
                  |L1.708|
0002c4  e009              B        |L1.730|
                  |L1.710|
0002c6  e006              B        |L1.726|
                  |L1.712|
;;;126    							}
;;;127    							else if(Page == '1')
0002c8  4824              LDR      r0,|L1.860|
0002ca  7800              LDRB     r0,[r0,#0]  ; Page
0002cc  2831              CMP      r0,#0x31
0002ce  d101              BNE      |L1.724|
;;;128    							{
;;;129    								ReadyMark();
0002d0  f7fffffe          BL       ReadyMark
                  |L1.724|
;;;130    							}					
;;;131    							//TFT_ShowString(396,250," SET ",WHITE);
;;;132    							break;
0002d4  e000              B        |L1.728|
                  |L1.726|
0002d6  e7a0              B        |L1.538|
                  |L1.728|
0002d8  bf00              NOP                            ;111
                  |L1.730|
;;;133    						}
;;;134    					}				
;;;135    				}
;;;136    			}
;;;137    	  }
;;;138    		if(PageTurning)  //Stop
0002da  2140              MOVS     r1,#0x40
0002dc  481d              LDR      r0,|L1.852|
0002de  f7fffffe          BL       GPIO_ReadInputDataBit
0002e2  bb20              CBNZ     r0,|L1.814|
;;;139    		{		   
;;;140    			Delay(0x3ffff);										  
0002e4  481f              LDR      r0,|L1.868|
0002e6  f7fffffe          BL       Delay
;;;141    			if(PageTurning)
0002ea  2140              MOVS     r1,#0x40
0002ec  4819              LDR      r0,|L1.852|
0002ee  f7fffffe          BL       GPIO_ReadInputDataBit
0002f2  b9e0              CBNZ     r0,|L1.814|
;;;142    			{		  //按键消抖动
;;;143    				while(PageTurning);//是否松开按键
0002f4  bf00              NOP      
                  |L1.758|
0002f6  2140              MOVS     r1,#0x40
0002f8  4816              LDR      r0,|L1.852|
0002fa  f7fffffe          BL       GPIO_ReadInputDataBit
0002fe  2800              CMP      r0,#0
000300  d0f9              BEQ      |L1.758|
;;;144    				SysInit();
000302  f7fffffe          BL       SysInit
;;;145    				if(Page == '0')
000306  4815              LDR      r0,|L1.860|
000308  7800              LDRB     r0,[r0,#0]  ; Page
00030a  2830              CMP      r0,#0x30
00030c  d103              BNE      |L1.790|
;;;146    					Page = '1';
00030e  2031              MOVS     r0,#0x31
000310  4912              LDR      r1,|L1.860|
000312  7008              STRB     r0,[r1,#0]
000314  e002              B        |L1.796|
                  |L1.790|
;;;147    				else
;;;148    					Page = '0';
000316  2030              MOVS     r0,#0x30
000318  4910              LDR      r1,|L1.860|
00031a  7008              STRB     r0,[r1,#0]
                  |L1.796|
;;;149    				
;;;150    				if(Page == '0')
00031c  480f              LDR      r0,|L1.860|
00031e  7800              LDRB     r0,[r0,#0]  ; Page
000320  2830              CMP      r0,#0x30
000322  d105              BNE      |L1.816|
;;;151    				{	
;;;152    					OutPutFile('1');
000324  2031              MOVS     r0,#0x31
000326  f7fffffe          BL       OutPutFile
;;;153    					ShowInterfaceOne();
00032a  f7fffffe          BL       ShowInterfaceOne
                  |L1.814|
00032e  e008              B        |L1.834|
                  |L1.816|
;;;154    				}
;;;155    				else if(Page == '1')
000330  480a              LDR      r0,|L1.860|
000332  7800              LDRB     r0,[r0,#0]  ; Page
000334  2831              CMP      r0,#0x31
000336  d104              BNE      |L1.834|
;;;156    				{
;;;157    					OutPutFile('2');
000338  2032              MOVS     r0,#0x32
00033a  f7fffffe          BL       OutPutFile
;;;158    					ShowInterfaceTwo();	
00033e  f7fffffe          BL       ShowInterfaceTwo
                  |L1.834|
000342  e71f              B        |L1.388|
;;;159    				}
;;;160    			}
;;;161    		}	
;;;162      }	
;;;163    }
;;;164    /****************************************************************************
                          ENDP

                  |L1.836|
                          DCD      0x40010800
                  |L1.840|
                          DCD      0x40010c00
                  |L1.844|
                          DCD      0x40011000
                  |L1.848|
                          DCD      0x40011400
                  |L1.852|
                          DCD      0x40011800
                  |L1.856|
                          DCD      0x001a0800
                  |L1.860|
                          DCD      Page
                  |L1.864|
                          DCD      TP_P
                  |L1.868|
                          DCD      0x0003ffff
                  |L1.872|
                          DCD      TimCount
                  |L1.876|
                          DCD      0x000927c0

                          AREA ||.data||, DATA, ALIGN=2

                  TimCount
                          DCD      0x00000000
                  Page
000004  31                DCB      0x31

                  __ARM_use_no_argv EQU 0
