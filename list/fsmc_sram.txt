; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\fsmc_sram.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\fsmc_sram.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -IF:\excitationPulse\Ver_F8_翻页\RTE -ID:\Keil_v5\MDK\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\fsmc_sram.crf TFT\fsmc_sram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FSMC_LCD_Init PROC
;;;29     ****************************************************************************/
;;;30     void FSMC_LCD_Init(void)
000000  b500              PUSH     {lr}
;;;31     {
000002  b097              SUB      sp,sp,#0x5c
;;;32       FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;33       FSMC_NORSRAMTimingInitTypeDef  p;
;;;34       GPIO_InitTypeDef  GPIO_InitStructure; 
;;;35     
;;;36       RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC, ENABLE);	   //使能FSMC接口时钟
000004  2101              MOVS     r1,#1
000006  0208              LSLS     r0,r1,#8
000008  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;37       
;;;38       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;			   //背光控制	       
00000c  f44f5000          MOV      r0,#0x2000
000010  f8ad0000          STRH     r0,[sp,#0]
;;;39       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		   //通用推挽输出模式
000014  2010              MOVS     r0,#0x10
000016  f88d0003          STRB     r0,[sp,#3]
;;;40       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //输出模式最大速度50MHz
00001a  2003              MOVS     r0,#3
00001c  f88d0002          STRB     r0,[sp,#2]
;;;41       GPIO_Init(GPIOD, &GPIO_InitStructure);    
000020  4669              MOV      r1,sp
000022  4833              LDR      r0,|L1.240|
000024  f7fffffe          BL       GPIO_Init
;;;42       GPIO_SetBits(GPIOD, GPIO_Pin_13);			               //打开背光
000028  f44f5100          MOV      r1,#0x2000
00002c  4830              LDR      r0,|L1.240|
00002e  f7fffffe          BL       GPIO_SetBits
;;;43     
;;;44     
;;;45       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;                //TFT 复位脚
000032  2002              MOVS     r0,#2
000034  f8ad0000          STRH     r0,[sp,#0]
;;;46       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		   //通用推挽输出模式
000038  2010              MOVS     r0,#0x10
00003a  f88d0003          STRB     r0,[sp,#3]
;;;47       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //输出模式最大速度50MHz
00003e  2003              MOVS     r0,#3
000040  f88d0002          STRB     r0,[sp,#2]
;;;48       GPIO_Init(GPIOE, &GPIO_InitStructure);  
000044  4669              MOV      r1,sp
000046  482b              LDR      r0,|L1.244|
000048  f7fffffe          BL       GPIO_Init
;;;49       
;;;50       	
;;;51       /*  启用FSMC复用功能， 定义FSMC D0---D15及nWE, nOE对应的引脚  */
;;;52       /* 设置 PD.00(D2), PD.01(D3), PD.04(nOE), PD.05(nWE), PD.08(D13), PD.09(D14), PD.10(D15),
;;;53          PD.14(D0), PD.15(D1) 为复用上拉 */
;;;54       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 |
00004c  f24c7033          MOV      r0,#0xc733
000050  f8ad0000          STRH     r0,[sp,#0]
;;;55                                     GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_14 | 
;;;56                                     GPIO_Pin_15;
;;;57       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		   //最大速度50MHz
000054  2003              MOVS     r0,#3
000056  f88d0002          STRB     r0,[sp,#2]
;;;58       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;		   //复用模式
00005a  2018              MOVS     r0,#0x18
00005c  f88d0003          STRB     r0,[sp,#3]
;;;59       GPIO_Init(GPIOD, &GPIO_InitStructure);
000060  4669              MOV      r1,sp
000062  4823              LDR      r0,|L1.240|
000064  f7fffffe          BL       GPIO_Init
;;;60     
;;;61       /* 设置 PE.07(D4), PE.08(D5), PE.09(D6), PE.10(D7), PE.11(D8), PE.12(D9), PE.13(D10),
;;;62          PE.14(D11), PE.15(D12) 为复用上拉 */
;;;63       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | 
000068  f64f7080          MOV      r0,#0xff80
00006c  f8ad0000          STRH     r0,[sp,#0]
;;;64                                     GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | 
;;;65                                     GPIO_Pin_15;
;;;66       GPIO_Init(GPIOE, &GPIO_InitStructure); 
000070  4669              MOV      r1,sp
000072  4820              LDR      r0,|L1.244|
000074  f7fffffe          BL       GPIO_Init
;;;67     
;;;68     
;;;69       
;;;70       /* FSMC  NE1 配置 PD7 */
;;;71       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; 
000078  2080              MOVS     r0,#0x80
00007a  f8ad0000          STRH     r0,[sp,#0]
;;;72       GPIO_Init(GPIOD, &GPIO_InitStructure);
00007e  4669              MOV      r1,sp
000080  481b              LDR      r0,|L1.240|
000082  f7fffffe          BL       GPIO_Init
;;;73       
;;;74       /* FSMC RS配置 PD11-A16 */
;;;75       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 ; 
000086  f44f6000          MOV      r0,#0x800
00008a  f8ad0000          STRH     r0,[sp,#0]
;;;76       GPIO_Init(GPIOD, &GPIO_InitStructure); 
00008e  4669              MOV      r1,sp
000090  4817              LDR      r0,|L1.240|
000092  f7fffffe          BL       GPIO_Init
;;;77     
;;;78       p.FSMC_AddressSetupTime = 0x02;
000096  2002              MOVS     r0,#2
000098  9001              STR      r0,[sp,#4]
;;;79       p.FSMC_AddressHoldTime = 0x00;
00009a  2000              MOVS     r0,#0
00009c  9002              STR      r0,[sp,#8]
;;;80       p.FSMC_DataSetupTime = 0x05;
00009e  2005              MOVS     r0,#5
0000a0  9003              STR      r0,[sp,#0xc]
;;;81       p.FSMC_BusTurnAroundDuration = 0x00;
0000a2  2000              MOVS     r0,#0
0000a4  9004              STR      r0,[sp,#0x10]
;;;82       p.FSMC_CLKDivision = 0x00;
0000a6  9005              STR      r0,[sp,#0x14]
;;;83       p.FSMC_DataLatency = 0x00;
0000a8  9006              STR      r0,[sp,#0x18]
;;;84       p.FSMC_AccessMode = FSMC_AccessMode_B;
0000aa  f04f5080          MOV      r0,#0x10000000
0000ae  9007              STR      r0,[sp,#0x1c]
;;;85     
;;;86       FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM1;
0000b0  2000              MOVS     r0,#0
0000b2  9008              STR      r0,[sp,#0x20]
;;;87       FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
0000b4  9009              STR      r0,[sp,#0x24]
;;;88       FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_NOR;
0000b6  2008              MOVS     r0,#8
0000b8  900a              STR      r0,[sp,#0x28]
;;;89       FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
0000ba  2010              MOVS     r0,#0x10
0000bc  900b              STR      r0,[sp,#0x2c]
;;;90       FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
0000be  2000              MOVS     r0,#0
0000c0  900c              STR      r0,[sp,#0x30]
;;;91       FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
0000c2  900e              STR      r0,[sp,#0x38]
;;;92       FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
0000c4  900f              STR      r0,[sp,#0x3c]
;;;93       FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
0000c6  9010              STR      r0,[sp,#0x40]
;;;94       FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
0000c8  f44f5080          MOV      r0,#0x1000
0000cc  9011              STR      r0,[sp,#0x44]
;;;95       FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
0000ce  2000              MOVS     r0,#0
0000d0  9012              STR      r0,[sp,#0x48]
;;;96       FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
0000d2  9013              STR      r0,[sp,#0x4c]
;;;97       FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
0000d4  9014              STR      r0,[sp,#0x50]
;;;98       FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
0000d6  a801              ADD      r0,sp,#4
0000d8  9015              STR      r0,[sp,#0x54]
;;;99       FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
0000da  9016              STR      r0,[sp,#0x58]
;;;100    
;;;101      FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
0000dc  a808              ADD      r0,sp,#0x20
0000de  f7fffffe          BL       FSMC_NORSRAMInit
;;;102    
;;;103      /* 使能FSMC BANK1_SRAM 模式 */
;;;104      FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE);  
0000e2  2101              MOVS     r1,#1
0000e4  2000              MOVS     r0,#0
0000e6  f7fffffe          BL       FSMC_NORSRAMCmd
;;;105    }
0000ea  b017              ADD      sp,sp,#0x5c
0000ec  bd00              POP      {pc}
;;;106    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L1.240|
                          DCD      0x40011400
                  |L1.244|
                          DCD      0x40011800
