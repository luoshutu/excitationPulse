; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\mysystem.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\mysystem.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -I.\CM3 -I.\TFT -IF:\excitationPulse\Ver_F8_翻页\RTE -ID:\Keil_v5\MDK\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\mysystem.crf mySystem.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SysInit PROC
;;;22     ****************************************************************************/ 
;;;23     void SysInit()
000000  b510              PUSH     {r4,lr}
;;;24     {
;;;25     	ChannelOneReset;        //通道1的控制信号输出引脚，复位
000002  2180              MOVS     r1,#0x80
000004  48f7              LDR      r0,|L1.996|
000006  f7fffffe          BL       GPIO_ResetBits
;;;26     	ChannelTwoReset;				//通道2的控制信号输出引脚，复位
00000a  2140              MOVS     r1,#0x40
00000c  48f5              LDR      r0,|L1.996|
00000e  f7fffffe          BL       GPIO_ResetBits
;;;27     	ChannelThreeReset;      //通道3的控制信号输出引脚，复位
000012  2120              MOVS     r1,#0x20
000014  48f3              LDR      r0,|L1.996|
000016  f7fffffe          BL       GPIO_ResetBits
;;;28     	ChannelFourReset;       //通道4的控制信号输出引脚，复位
00001a  2110              MOVS     r1,#0x10
00001c  48f1              LDR      r0,|L1.996|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;29     	ChannelFiveReset;       //通道5的控制信号输出引脚，复位
000022  2101              MOVS     r1,#1
000024  48ef              LDR      r0,|L1.996|
000026  f7fffffe          BL       GPIO_ResetBits
;;;30     	ChannelSixReset;			 	//通道6的控制信号输出引脚，复位
00002a  2102              MOVS     r1,#2
00002c  48ed              LDR      r0,|L1.996|
00002e  f7fffffe          BL       GPIO_ResetBits
;;;31     	ChannelSevenReset;      //通道7的控制信号输出引脚，复位
000032  2104              MOVS     r1,#4
000034  48eb              LDR      r0,|L1.996|
000036  f7fffffe          BL       GPIO_ResetBits
;;;32     	ChannelEightReset;      //通道8的控制信号输出引脚，复位
00003a  2108              MOVS     r1,#8
00003c  48e9              LDR      r0,|L1.996|
00003e  f7fffffe          BL       GPIO_ResetBits
;;;33     	
;;;34     	Val_Level = 0;
000042  2000              MOVS     r0,#0
000044  49e8              LDR      r1,|L1.1000|
000046  6008              STR      r0,[r1,#0]  ; Val_Level
;;;35     	MCP_ResistanceSet(0x70);                  //初始化电压为8V
000048  2070              MOVS     r0,#0x70
00004a  f7fffffe          BL       MCP_ResistanceSet
;;;36     	PowerNEnable;	      //电源使能
00004e  2101              MOVS     r1,#1
000050  48e6              LDR      r0,|L1.1004|
000052  f7fffffe          BL       GPIO_ResetBits
;;;37     	GPIO_SetBits(GPIOE, GPIO_Pin_5);          //start按键
000056  2120              MOVS     r1,#0x20
000058  48e4              LDR      r0,|L1.1004|
00005a  f7fffffe          BL       GPIO_SetBits
;;;38     	GPIO_SetBits(GPIOE, GPIO_Pin_6);          //stop按键
00005e  2140              MOVS     r1,#0x40
000060  48e2              LDR      r0,|L1.1004|
000062  f7fffffe          BL       GPIO_SetBits
;;;39     	
;;;40     	Num_Pulse[0] = 0;Num_Pulse[1] = 0;Num_Pulse[2] = 0;Num_Pulse[3] = 0;  //初始化脉冲个数与频率
000066  2000              MOVS     r0,#0
000068  49e1              LDR      r1,|L1.1008|
00006a  6008              STR      r0,[r1,#0]  ; Num_Pulse
00006c  6048              STR      r0,[r1,#4]  ; Num_Pulse
00006e  6088              STR      r0,[r1,#8]  ; Num_Pulse
000070  60c8              STR      r0,[r1,#0xc]  ; Num_Pulse
;;;41     	Num_Pulse[4] = 0;Num_Pulse[5] = 0;Num_Pulse[6] = 0;Num_Pulse[7] = 0;
000072  6108              STR      r0,[r1,#0x10]  ; Num_Pulse
000074  6148              STR      r0,[r1,#0x14]  ; Num_Pulse
000076  6188              STR      r0,[r1,#0x18]  ; Num_Pulse
000078  61c8              STR      r0,[r1,#0x1c]  ; Num_Pulse
;;;42     	Frequency[0] = 1;Frequency[1] = 1;Frequency[2] = 1;Frequency[3] = 1;
00007a  2001              MOVS     r0,#1
00007c  49dd              LDR      r1,|L1.1012|
00007e  6008              STR      r0,[r1,#0]  ; Frequency
000080  6048              STR      r0,[r1,#4]  ; Frequency
000082  6088              STR      r0,[r1,#8]  ; Frequency
000084  60c8              STR      r0,[r1,#0xc]  ; Frequency
;;;43     	Frequency[4] = 1;Frequency[5] = 1;Frequency[6] = 1;Frequency[7] = 1;
000086  6108              STR      r0,[r1,#0x10]  ; Frequency
000088  6148              STR      r0,[r1,#0x14]  ; Frequency
00008a  6188              STR      r0,[r1,#0x18]  ; Frequency
00008c  61c8              STR      r0,[r1,#0x1c]  ; Frequency
;;;44     }
00008e  bd10              POP      {r4,pc}
;;;45     /****************************************************************************
                          ENDP

                  ReadyMark PROC
;;;524    ****************************************************************************/ 
;;;525    void ReadyMark()
000090  b508              PUSH     {r3,lr}
;;;526    {
;;;527    	if(Num_Pulse[0] != 0)
000092  48d7              LDR      r0,|L1.1008|
000094  6800              LDR      r0,[r0,#0]  ; Num_Pulse
000096  b140              CBZ      r0,|L1.170|
;;;528    	{	
;;;529    		FillColor(52,56,65,70,GRED); 
000098  f64f70e0          MOV      r0,#0xffe0
00009c  2346              MOVS     r3,#0x46
00009e  2241              MOVS     r2,#0x41
0000a0  2138              MOVS     r1,#0x38
0000a2  9000              STR      r0,[sp,#0]
0000a4  2034              MOVS     r0,#0x34
0000a6  f7fffffe          BL       FillColor
                  |L1.170|
;;;530    	}
;;;531    	if(Num_Pulse[1] != 0)
0000aa  48d1              LDR      r0,|L1.1008|
0000ac  6840              LDR      r0,[r0,#4]  ; Num_Pulse
0000ae  b140              CBZ      r0,|L1.194|
;;;532    	{	
;;;533    		FillColor(52,110,65,124,GRED);
0000b0  f64f70e0          MOV      r0,#0xffe0
0000b4  237c              MOVS     r3,#0x7c
0000b6  2241              MOVS     r2,#0x41
0000b8  216e              MOVS     r1,#0x6e
0000ba  9000              STR      r0,[sp,#0]
0000bc  2034              MOVS     r0,#0x34
0000be  f7fffffe          BL       FillColor
                  |L1.194|
;;;534    	}
;;;535    	if(Num_Pulse[2] != 0)
0000c2  48cb              LDR      r0,|L1.1008|
0000c4  6880              LDR      r0,[r0,#8]  ; Num_Pulse
0000c6  b140              CBZ      r0,|L1.218|
;;;536    	{	
;;;537    		FillColor(52,164,65,178,GRED);
0000c8  f64f70e0          MOV      r0,#0xffe0
0000cc  23b2              MOVS     r3,#0xb2
0000ce  2241              MOVS     r2,#0x41
0000d0  21a4              MOVS     r1,#0xa4
0000d2  9000              STR      r0,[sp,#0]
0000d4  2034              MOVS     r0,#0x34
0000d6  f7fffffe          BL       FillColor
                  |L1.218|
;;;538    	}
;;;539    	if(Num_Pulse[3] != 0)
0000da  48c5              LDR      r0,|L1.1008|
0000dc  68c0              LDR      r0,[r0,#0xc]  ; Num_Pulse
0000de  b140              CBZ      r0,|L1.242|
;;;540    	{	
;;;541    		FillColor(52,218,65,232,GRED);
0000e0  f64f70e0          MOV      r0,#0xffe0
0000e4  23e8              MOVS     r3,#0xe8
0000e6  2241              MOVS     r2,#0x41
0000e8  21da              MOVS     r1,#0xda
0000ea  9000              STR      r0,[sp,#0]
0000ec  2034              MOVS     r0,#0x34
0000ee  f7fffffe          BL       FillColor
                  |L1.242|
;;;542    	}
;;;543    	/*
;;;544    	if(Num_Pulse[4] != 0)
;;;545    	{	
;;;546    		FillColor(53,145,65,157,GRED); 
;;;547    	}
;;;548    	if(Num_Pulse[5] != 0)
;;;549    	{	
;;;550    		FillColor(53,176,65,188,GRED); 
;;;551    	}
;;;552    	if(Num_Pulse[6] != 0)
;;;553    	{	
;;;554    		FillColor(53,208,65,220,GRED);
;;;555    	}
;;;556    	if(Num_Pulse[7] != 0)
;;;557    	{	
;;;558    		FillColor(53,239,65,251,GRED);
;;;559    	}
;;;560    	*/
;;;561    }
0000f2  bd08              POP      {r3,pc}
;;;562    /****************************************************************************
                          ENDP

                  Clear PROC
;;;458    ****************************************************************************/ 
;;;459    void Clear()
0000f4  b508              PUSH     {r3,lr}
;;;460    {
;;;461    	FillColor(52,56,65,70,WHITE); 
0000f6  f64f70ff          MOV      r0,#0xffff
0000fa  2346              MOVS     r3,#0x46
0000fc  2241              MOVS     r2,#0x41
0000fe  2138              MOVS     r1,#0x38
000100  9000              STR      r0,[sp,#0]
000102  2034              MOVS     r0,#0x34
000104  f7fffffe          BL       FillColor
;;;462    	FillColor(52,110,65,124,WHITE);
000108  f64f70ff          MOV      r0,#0xffff
00010c  237c              MOVS     r3,#0x7c
00010e  2241              MOVS     r2,#0x41
000110  216e              MOVS     r1,#0x6e
000112  9000              STR      r0,[sp,#0]
000114  2034              MOVS     r0,#0x34
000116  f7fffffe          BL       FillColor
;;;463    	FillColor(52,164,65,178,WHITE);
00011a  f64f70ff          MOV      r0,#0xffff
00011e  23b2              MOVS     r3,#0xb2
000120  2241              MOVS     r2,#0x41
000122  21a4              MOVS     r1,#0xa4
000124  9000              STR      r0,[sp,#0]
000126  2034              MOVS     r0,#0x34
000128  f7fffffe          BL       FillColor
;;;464    	FillColor(52,218,65,232,WHITE);
00012c  f64f70ff          MOV      r0,#0xffff
000130  23e8              MOVS     r3,#0xe8
000132  2241              MOVS     r2,#0x41
000134  21da              MOVS     r1,#0xda
000136  9000              STR      r0,[sp,#0]
000138  2034              MOVS     r0,#0x34
00013a  f7fffffe          BL       FillColor
;;;465    //	Num_Pulse[0] = 0; Num_Pulse[1] = 0;
;;;466    //	Num_Pulse[2] = 0; Num_Pulse[3] = 0;
;;;467    //	FillColor(53,145,65,157,WHITE);
;;;468    //	FillColor(53,176,65,188,WHITE);
;;;469    //	FillColor(53,208,65,220,WHITE);
;;;470    //	FillColor(53,239,65,251,WHITE);
;;;471    }
00013e  bd08              POP      {r3,pc}
;;;472    /****************************************************************************
                          ENDP

                  TouchHandle_PageOne PROC
;;;52     ****************************************************************************/ 
;;;53     void TouchHandle_PageOne(unsigned short X,unsigned short Y)
000140  e92d43f8          PUSH     {r3-r9,lr}
;;;54     {	
000144  4604              MOV      r4,r0
000146  460d              MOV      r5,r1
;;;55     	int i;
;;;56     	int tempN,tempF;
;;;57     	
;;;58     	//限制通道数为8个
;;;59     	if(!(0 < Channel < 9)) Channel = 1;						 
000148  48ab              LDR      r0,|L1.1016|
00014a  6800              LDR      r0,[r0,#0]  ; Channel
00014c  2800              CMP      r0,#0
00014e  dd01              BLE      |L1.340|
000150  2001              MOVS     r0,#1
000152  e000              B        |L1.342|
                  |L1.340|
000154  2000              MOVS     r0,#0
                  |L1.342|
000156  2809              CMP      r0,#9
000158  db02              BLT      |L1.352|
00015a  2001              MOVS     r0,#1
00015c  49a6              LDR      r1,|L1.1016|
00015e  6008              STR      r0,[r1,#0]  ; Channel
                  |L1.352|
;;;60     				
;;;61     	//判断触摸点区域
;;;62     	if(X > 70 && X < 130) //选择通道
000160  2c46              CMP      r4,#0x46
000162  dd51              BLE      |L1.520|
000164  2c82              CMP      r4,#0x82
000166  da4f              BGE      |L1.520|
;;;63     	{
;;;64     		if(Y > 43 && Y < 83)          //选择通道1
000168  2d2b              CMP      r5,#0x2b
00016a  dd11              BLE      |L1.400|
00016c  2d53              CMP      r5,#0x53
00016e  da0f              BGE      |L1.400|
;;;65     		{
;;;66     			Channel = 1;
000170  2001              MOVS     r0,#1
000172  49a1              LDR      r1,|L1.1016|
000174  6008              STR      r0,[r1,#0]  ; Channel
;;;67     			Clear();
000176  f7fffffe          BL       Clear
;;;68     			ReadyMark();
00017a  f7fffffe          BL       ReadyMark
;;;69     			FillColor(52,56,65,70,BLUE); 
00017e  201f              MOVS     r0,#0x1f
000180  2346              MOVS     r3,#0x46
000182  2241              MOVS     r2,#0x41
000184  2138              MOVS     r1,#0x38
000186  9000              STR      r0,[sp,#0]
000188  2034              MOVS     r0,#0x34
00018a  f7fffffe          BL       FillColor
                  |L1.398|
00018e  e10e              B        |L1.942|
                  |L1.400|
;;;70     		}
;;;71     		else if(Y > 97 && Y < 137)   //选择通道2
000190  2d61              CMP      r5,#0x61
000192  dd11              BLE      |L1.440|
000194  2d89              CMP      r5,#0x89
000196  da0f              BGE      |L1.440|
;;;72     		{
;;;73     			Channel = 2;
000198  2002              MOVS     r0,#2
00019a  4997              LDR      r1,|L1.1016|
00019c  6008              STR      r0,[r1,#0]  ; Channel
;;;74     			Clear();
00019e  f7fffffe          BL       Clear
;;;75     			ReadyMark();
0001a2  f7fffffe          BL       ReadyMark
;;;76     			FillColor(52,110,65,124,BLUE);
0001a6  201f              MOVS     r0,#0x1f
0001a8  237c              MOVS     r3,#0x7c
0001aa  2241              MOVS     r2,#0x41
0001ac  216e              MOVS     r1,#0x6e
0001ae  9000              STR      r0,[sp,#0]
0001b0  2034              MOVS     r0,#0x34
0001b2  f7fffffe          BL       FillColor
0001b6  e0fa              B        |L1.942|
                  |L1.440|
;;;77     		}
;;;78     		else if(Y > 151 && Y < 191)   //选择通道3
0001b8  2d97              CMP      r5,#0x97
0001ba  dd11              BLE      |L1.480|
0001bc  2dbf              CMP      r5,#0xbf
0001be  da0f              BGE      |L1.480|
;;;79     		{
;;;80     			Channel = 3;
0001c0  2003              MOVS     r0,#3
0001c2  498d              LDR      r1,|L1.1016|
0001c4  6008              STR      r0,[r1,#0]  ; Channel
;;;81     			Clear();
0001c6  f7fffffe          BL       Clear
;;;82     			ReadyMark();
0001ca  f7fffffe          BL       ReadyMark
;;;83     			FillColor(52,164,65,178,BLUE);
0001ce  201f              MOVS     r0,#0x1f
0001d0  23b2              MOVS     r3,#0xb2
0001d2  2241              MOVS     r2,#0x41
0001d4  21a4              MOVS     r1,#0xa4
0001d6  9000              STR      r0,[sp,#0]
0001d8  2034              MOVS     r0,#0x34
0001da  f7fffffe          BL       FillColor
0001de  e0e6              B        |L1.942|
                  |L1.480|
;;;84     		}
;;;85     		else if(Y > 204 && Y < 245)  //选择通道4
0001e0  2dcc              CMP      r5,#0xcc
0001e2  ddd4              BLE      |L1.398|
0001e4  2df5              CMP      r5,#0xf5
0001e6  dad2              BGE      |L1.398|
;;;86     		{
;;;87     			Channel = 4;
0001e8  2004              MOVS     r0,#4
0001ea  4983              LDR      r1,|L1.1016|
0001ec  6008              STR      r0,[r1,#0]  ; Channel
;;;88     			Clear();
0001ee  f7fffffe          BL       Clear
;;;89     			ReadyMark();
0001f2  f7fffffe          BL       ReadyMark
;;;90     			FillColor(52,218,65,232,BLUE);
0001f6  201f              MOVS     r0,#0x1f
0001f8  23e8              MOVS     r3,#0xe8
0001fa  2241              MOVS     r2,#0x41
0001fc  21da              MOVS     r1,#0xda
0001fe  9000              STR      r0,[sp,#0]
000200  2034              MOVS     r0,#0x34
000202  f7fffffe          BL       FillColor
000206  e0d2              B        |L1.942|
                  |L1.520|
;;;91     		}
;;;92     		/*
;;;93     		else if(Y > 140 && Y < 160)  //选择通道5
;;;94     		{
;;;95     			Channel = 5;
;;;96     			Clear();
;;;97     			ReadyMark();
;;;98     			FillColor(53,145,65,157,BLUE);
;;;99     		}
;;;100    			else if(Y > 171 && Y < 191)  //选择通道6
;;;101    		{
;;;102    			Channel = 6;
;;;103    			Clear();
;;;104    			ReadyMark();
;;;105    			FillColor(53,176,65,188,BLUE);
;;;106    		}
;;;107    		else if(Y > 203 && Y < 223)   //选择通道7
;;;108    		{
;;;109    			Channel = 7;
;;;110    			Clear();
;;;111    			ReadyMark();
;;;112    			FillColor(53,208,65,220,BLUE);
;;;113    		}
;;;114    		else if(Y > 234 && Y < 254)    //选择通道8
;;;115    		{
;;;116    			Channel = 8;
;;;117    			Clear();
;;;118    			ReadyMark();
;;;119    			FillColor(53,239,65,251,BLUE);
;;;120    		}
;;;121    		*/
;;;122    	}
;;;123    
;;;124    	else if(Y > 131 && Y < 184)  //变量加
000208  2d83              CMP      r5,#0x83
00020a  dd67              BLE      |L1.732|
00020c  2db8              CMP      r5,#0xb8
00020e  da65              BGE      |L1.732|
;;;125    	{
;;;126    		if(X > 169 && X < 229)  //电压
000210  2ca9              CMP      r4,#0xa9
000212  dd07              BLE      |L1.548|
000214  2ce5              CMP      r4,#0xe5
000216  da05              BGE      |L1.548|
;;;127    		{
;;;128    			Val_Level ++;
000218  4873              LDR      r0,|L1.1000|
00021a  6800              LDR      r0,[r0,#0]  ; Val_Level
00021c  1c40              ADDS     r0,r0,#1
00021e  4972              LDR      r1,|L1.1000|
000220  6008              STR      r0,[r1,#0]  ; Val_Level
000222  e0c4              B        |L1.942|
                  |L1.548|
;;;129    		}
;;;130    		else if(X > 274 && X < 334)  //脉冲数
000224  f5b47f89          CMP      r4,#0x112
000228  dd2a              BLE      |L1.640|
00022a  f5b47fa7          CMP      r4,#0x14e
00022e  da27              BGE      |L1.640|
;;;131    		{
;;;132    			if(Channel == 1)
000230  4871              LDR      r0,|L1.1016|
000232  6800              LDR      r0,[r0,#0]  ; Channel
000234  2801              CMP      r0,#1
000236  d105              BNE      |L1.580|
;;;133    				Num_Pulse[0] ++;
000238  486d              LDR      r0,|L1.1008|
00023a  6800              LDR      r0,[r0,#0]  ; Num_Pulse
00023c  1c40              ADDS     r0,r0,#1
00023e  496c              LDR      r1,|L1.1008|
000240  6008              STR      r0,[r1,#0]  ; Num_Pulse
000242  e0b4              B        |L1.942|
                  |L1.580|
;;;134    			else if(Channel == 2)
000244  486c              LDR      r0,|L1.1016|
000246  6800              LDR      r0,[r0,#0]  ; Channel
000248  2802              CMP      r0,#2
00024a  d105              BNE      |L1.600|
;;;135    				Num_Pulse[1] ++;
00024c  4868              LDR      r0,|L1.1008|
00024e  6840              LDR      r0,[r0,#4]  ; Num_Pulse
000250  1c40              ADDS     r0,r0,#1
000252  4967              LDR      r1,|L1.1008|
000254  6048              STR      r0,[r1,#4]  ; Num_Pulse
000256  e0aa              B        |L1.942|
                  |L1.600|
;;;136    			else if(Channel == 3)
000258  4867              LDR      r0,|L1.1016|
00025a  6800              LDR      r0,[r0,#0]  ; Channel
00025c  2803              CMP      r0,#3
00025e  d105              BNE      |L1.620|
;;;137    				Num_Pulse[2] ++;
000260  4863              LDR      r0,|L1.1008|
000262  6880              LDR      r0,[r0,#8]  ; Num_Pulse
000264  1c40              ADDS     r0,r0,#1
000266  4962              LDR      r1,|L1.1008|
000268  6088              STR      r0,[r1,#8]  ; Num_Pulse
00026a  e0a0              B        |L1.942|
                  |L1.620|
;;;138    			else if(Channel == 4)
00026c  4862              LDR      r0,|L1.1016|
00026e  6800              LDR      r0,[r0,#0]  ; Channel
000270  2804              CMP      r0,#4
000272  d18c              BNE      |L1.398|
;;;139    				Num_Pulse[3] ++;
000274  485e              LDR      r0,|L1.1008|
000276  68c0              LDR      r0,[r0,#0xc]  ; Num_Pulse
000278  1c40              ADDS     r0,r0,#1
00027a  495d              LDR      r1,|L1.1008|
00027c  60c8              STR      r0,[r1,#0xc]  ; Num_Pulse
00027e  e096              B        |L1.942|
                  |L1.640|
;;;140    			/*
;;;141    			else if(Channel == 5)
;;;142    				Num_Pulse[4] ++;
;;;143    			else if(Channel == 6)
;;;144    				Num_Pulse[5] ++;
;;;145    			else if(Channel == 7)
;;;146    				Num_Pulse[6] ++;
;;;147    			else if(Channel == 8)
;;;148    				Num_Pulse[7] ++;
;;;149    			*/
;;;150    		}
;;;151    		else if(X > 379 && X < 440)   //频率
000280  f5b47fbe          CMP      r4,#0x17c
000284  db0b              BLT      |L1.670|
000286  f5b47fdc          CMP      r4,#0x1b8
00028a  da08              BGE      |L1.670|
;;;152    		{
;;;153    			if(Channel == 1)
00028c  485a              LDR      r0,|L1.1016|
00028e  6800              LDR      r0,[r0,#0]  ; Channel
000290  2801              CMP      r0,#1
000292  d105              BNE      |L1.672|
;;;154    				Frequency[0] ++;
000294  4857              LDR      r0,|L1.1012|
000296  6800              LDR      r0,[r0,#0]  ; Frequency
000298  1c40              ADDS     r0,r0,#1
00029a  4956              LDR      r1,|L1.1012|
00029c  6008              STR      r0,[r1,#0]  ; Frequency
                  |L1.670|
00029e  e086              B        |L1.942|
                  |L1.672|
;;;155    			else if(Channel == 2)
0002a0  4855              LDR      r0,|L1.1016|
0002a2  6800              LDR      r0,[r0,#0]  ; Channel
0002a4  2802              CMP      r0,#2
0002a6  d105              BNE      |L1.692|
;;;156    				Frequency[1] ++;
0002a8  4852              LDR      r0,|L1.1012|
0002aa  6840              LDR      r0,[r0,#4]  ; Frequency
0002ac  1c40              ADDS     r0,r0,#1
0002ae  4951              LDR      r1,|L1.1012|
0002b0  6048              STR      r0,[r1,#4]  ; Frequency
0002b2  e07c              B        |L1.942|
                  |L1.692|
;;;157    			else if(Channel == 3)
0002b4  4850              LDR      r0,|L1.1016|
0002b6  6800              LDR      r0,[r0,#0]  ; Channel
0002b8  2803              CMP      r0,#3
0002ba  d105              BNE      |L1.712|
;;;158    				Frequency[2] ++;
0002bc  484d              LDR      r0,|L1.1012|
0002be  6880              LDR      r0,[r0,#8]  ; Frequency
0002c0  1c40              ADDS     r0,r0,#1
0002c2  494c              LDR      r1,|L1.1012|
0002c4  6088              STR      r0,[r1,#8]  ; Frequency
0002c6  e072              B        |L1.942|
                  |L1.712|
;;;159    			else if(Channel == 4)
0002c8  484b              LDR      r0,|L1.1016|
0002ca  6800              LDR      r0,[r0,#0]  ; Channel
0002cc  2804              CMP      r0,#4
0002ce  d16e              BNE      |L1.942|
;;;160    				Frequency[3] ++;
0002d0  4848              LDR      r0,|L1.1012|
0002d2  68c0              LDR      r0,[r0,#0xc]  ; Frequency
0002d4  1c40              ADDS     r0,r0,#1
0002d6  4947              LDR      r1,|L1.1012|
0002d8  60c8              STR      r0,[r1,#0xc]  ; Frequency
0002da  e068              B        |L1.942|
                  |L1.732|
;;;161    			/*
;;;162    			else if(Channel == 5)
;;;163    				Frequency[4] ++;
;;;164    			else if(Channel == 6)
;;;165    				Frequency[5] ++;
;;;166    			else if(Channel == 7)
;;;167    				Frequency[6] ++;
;;;168    			else if(Channel == 8)
;;;169    				Frequency[7] ++;
;;;170    			*/
;;;171    		}
;;;172    	}
;;;173    	else if(Y > 201 && Y < 255) //变量减
0002dc  2dc9              CMP      r5,#0xc9
0002de  dd66              BLE      |L1.942|
0002e0  2dff              CMP      r5,#0xff
0002e2  da64              BGE      |L1.942|
;;;174    	{
;;;175    		if(X > 169 && X < 229)  //电压
0002e4  2ca9              CMP      r4,#0xa9
0002e6  dd07              BLE      |L1.760|
0002e8  2ce5              CMP      r4,#0xe5
0002ea  da05              BGE      |L1.760|
;;;176    		{
;;;177    			Val_Level --;
0002ec  483e              LDR      r0,|L1.1000|
0002ee  6800              LDR      r0,[r0,#0]  ; Val_Level
0002f0  1e40              SUBS     r0,r0,#1
0002f2  493d              LDR      r1,|L1.1000|
0002f4  6008              STR      r0,[r1,#0]  ; Val_Level
0002f6  e05a              B        |L1.942|
                  |L1.760|
;;;178    		}
;;;179    		else if(X > 274 && X < 334)  //脉冲数
0002f8  f5b47f89          CMP      r4,#0x112
0002fc  dd2a              BLE      |L1.852|
0002fe  f5b47fa7          CMP      r4,#0x14e
000302  da27              BGE      |L1.852|
;;;180    		{
;;;181    			if(Channel == 1)
000304  483c              LDR      r0,|L1.1016|
000306  6800              LDR      r0,[r0,#0]  ; Channel
000308  2801              CMP      r0,#1
00030a  d105              BNE      |L1.792|
;;;182    				Num_Pulse[0] --;
00030c  4838              LDR      r0,|L1.1008|
00030e  6800              LDR      r0,[r0,#0]  ; Num_Pulse
000310  1e40              SUBS     r0,r0,#1
000312  4937              LDR      r1,|L1.1008|
000314  6008              STR      r0,[r1,#0]  ; Num_Pulse
000316  e04a              B        |L1.942|
                  |L1.792|
;;;183    			else if(Channel == 2)
000318  4837              LDR      r0,|L1.1016|
00031a  6800              LDR      r0,[r0,#0]  ; Channel
00031c  2802              CMP      r0,#2
00031e  d105              BNE      |L1.812|
;;;184    				Num_Pulse[1] --;
000320  4833              LDR      r0,|L1.1008|
000322  6840              LDR      r0,[r0,#4]  ; Num_Pulse
000324  1e40              SUBS     r0,r0,#1
000326  4932              LDR      r1,|L1.1008|
000328  6048              STR      r0,[r1,#4]  ; Num_Pulse
00032a  e040              B        |L1.942|
                  |L1.812|
;;;185    			else if(Channel == 3)
00032c  4832              LDR      r0,|L1.1016|
00032e  6800              LDR      r0,[r0,#0]  ; Channel
000330  2803              CMP      r0,#3
000332  d105              BNE      |L1.832|
;;;186    				Num_Pulse[2] --;
000334  482e              LDR      r0,|L1.1008|
000336  6880              LDR      r0,[r0,#8]  ; Num_Pulse
000338  1e40              SUBS     r0,r0,#1
00033a  492d              LDR      r1,|L1.1008|
00033c  6088              STR      r0,[r1,#8]  ; Num_Pulse
00033e  e036              B        |L1.942|
                  |L1.832|
;;;187    			else if(Channel == 4)
000340  482d              LDR      r0,|L1.1016|
000342  6800              LDR      r0,[r0,#0]  ; Channel
000344  2804              CMP      r0,#4
000346  d132              BNE      |L1.942|
;;;188    				Num_Pulse[3] --;
000348  4829              LDR      r0,|L1.1008|
00034a  68c0              LDR      r0,[r0,#0xc]  ; Num_Pulse
00034c  1e40              SUBS     r0,r0,#1
00034e  4928              LDR      r1,|L1.1008|
000350  60c8              STR      r0,[r1,#0xc]  ; Num_Pulse
000352  e02c              B        |L1.942|
                  |L1.852|
;;;189    			/*
;;;190    			else if(Channel == 5)
;;;191    				Num_Pulse[4] --;
;;;192    			else if(Channel == 6)
;;;193    				Num_Pulse[5] --;
;;;194    			else if(Channel == 7)
;;;195    				Num_Pulse[6] --;
;;;196    			else if(Channel == 8)
;;;197    				Num_Pulse[7] --;
;;;198    			*/
;;;199    		}
;;;200    		else if(X > 379 && X < 440) //频率
000354  f5b47fbe          CMP      r4,#0x17c
000358  db29              BLT      |L1.942|
00035a  f5b47fdc          CMP      r4,#0x1b8
00035e  da26              BGE      |L1.942|
;;;201    		{
;;;202    			if(Channel == 1)
000360  4825              LDR      r0,|L1.1016|
000362  6800              LDR      r0,[r0,#0]  ; Channel
000364  2801              CMP      r0,#1
000366  d105              BNE      |L1.884|
;;;203    				Frequency[0] --;
000368  4822              LDR      r0,|L1.1012|
00036a  6800              LDR      r0,[r0,#0]  ; Frequency
00036c  1e40              SUBS     r0,r0,#1
00036e  4921              LDR      r1,|L1.1012|
000370  6008              STR      r0,[r1,#0]  ; Frequency
000372  e01c              B        |L1.942|
                  |L1.884|
;;;204    			else if(Channel == 2)
000374  4820              LDR      r0,|L1.1016|
000376  6800              LDR      r0,[r0,#0]  ; Channel
000378  2802              CMP      r0,#2
00037a  d105              BNE      |L1.904|
;;;205    				Frequency[1] --;
00037c  481d              LDR      r0,|L1.1012|
00037e  6840              LDR      r0,[r0,#4]  ; Frequency
000380  1e40              SUBS     r0,r0,#1
000382  491c              LDR      r1,|L1.1012|
000384  6048              STR      r0,[r1,#4]  ; Frequency
000386  e012              B        |L1.942|
                  |L1.904|
;;;206    			else if(Channel == 3)
000388  481b              LDR      r0,|L1.1016|
00038a  6800              LDR      r0,[r0,#0]  ; Channel
00038c  2803              CMP      r0,#3
00038e  d105              BNE      |L1.924|
;;;207    				Frequency[2] --;
000390  4818              LDR      r0,|L1.1012|
000392  6880              LDR      r0,[r0,#8]  ; Frequency
000394  1e40              SUBS     r0,r0,#1
000396  4917              LDR      r1,|L1.1012|
000398  6088              STR      r0,[r1,#8]  ; Frequency
00039a  e008              B        |L1.942|
                  |L1.924|
;;;208    			else if(Channel == 4)
00039c  4816              LDR      r0,|L1.1016|
00039e  6800              LDR      r0,[r0,#0]  ; Channel
0003a0  2804              CMP      r0,#4
0003a2  d104              BNE      |L1.942|
;;;209    				Frequency[3] --;
0003a4  4813              LDR      r0,|L1.1012|
0003a6  68c0              LDR      r0,[r0,#0xc]  ; Frequency
0003a8  1e40              SUBS     r0,r0,#1
0003aa  4912              LDR      r1,|L1.1012|
0003ac  60c8              STR      r0,[r1,#0xc]  ; Frequency
                  |L1.942|
;;;210    			/*
;;;211    			else if(Channel == 5)
;;;212    				Frequency[4] --;
;;;213    			else if(Channel == 6)
;;;214    				Frequency[5] --;
;;;215    			else if(Channel == 7)
;;;216    				Frequency[6] --;
;;;217    			else if(Channel == 8)
;;;218    				Frequency[7] --;
;;;219    			*/
;;;220    		}
;;;221    	}
;;;222    	
;;;223    	//限制电压等级//电压突变可能会导致问题
;;;224    	if(Val_Level > 9)
0003ae  480e              LDR      r0,|L1.1000|
0003b0  6800              LDR      r0,[r0,#0]  ; Val_Level
0003b2  2809              CMP      r0,#9
0003b4  dd03              BLE      |L1.958|
;;;225    		Val_Level = 9;
0003b6  2009              MOVS     r0,#9
0003b8  490b              LDR      r1,|L1.1000|
0003ba  6008              STR      r0,[r1,#0]  ; Val_Level
0003bc  e006              B        |L1.972|
                  |L1.958|
;;;226    	else if(Val_Level < 0)
0003be  480a              LDR      r0,|L1.1000|
0003c0  6800              LDR      r0,[r0,#0]  ; Val_Level
0003c2  2800              CMP      r0,#0
0003c4  da02              BGE      |L1.972|
;;;227    		Val_Level = 0;
0003c6  2000              MOVS     r0,#0
0003c8  4907              LDR      r1,|L1.1000|
0003ca  6008              STR      r0,[r1,#0]  ; Val_Level
                  |L1.972|
;;;228    	
;;;229    	
;;;230    	for(i = 0;i < 8;i++)
0003cc  2600              MOVS     r6,#0
0003ce  e032              B        |L1.1078|
                  |L1.976|
;;;231    	{
;;;232    		//限制脉冲个数
;;;233    		if(Num_Pulse[i] > 9)
0003d0  4807              LDR      r0,|L1.1008|
0003d2  f8500026          LDR      r0,[r0,r6,LSL #2]
0003d6  2809              CMP      r0,#9
0003d8  dd10              BLE      |L1.1020|
;;;234    			Num_Pulse[i] = 9;
0003da  2009              MOVS     r0,#9
0003dc  4904              LDR      r1,|L1.1008|
0003de  f8410026          STR      r0,[r1,r6,LSL #2]
0003e2  e014              B        |L1.1038|
                  |L1.996|
                          DCD      0x40011000
                  |L1.1000|
                          DCD      Val_Level
                  |L1.1004|
                          DCD      0x40011800
                  |L1.1008|
                          DCD      Num_Pulse
                  |L1.1012|
                          DCD      Frequency
                  |L1.1016|
                          DCD      Channel
                  |L1.1020|
;;;235    		else if(Num_Pulse[i] < 0)
0003fc  48f7              LDR      r0,|L1.2012|
0003fe  f8500026          LDR      r0,[r0,r6,LSL #2]
000402  2800              CMP      r0,#0
000404  da03              BGE      |L1.1038|
;;;236    			Num_Pulse[i] = 0;
000406  2000              MOVS     r0,#0
000408  49f4              LDR      r1,|L1.2012|
00040a  f8410026          STR      r0,[r1,r6,LSL #2]
                  |L1.1038|
;;;237    		//限制频率
;;;238    		if(Frequency[i] > 9)
00040e  48f4              LDR      r0,|L1.2016|
000410  f8500026          LDR      r0,[r0,r6,LSL #2]
000414  2809              CMP      r0,#9
000416  dd04              BLE      |L1.1058|
;;;239    			Frequency[i] = 9;
000418  2009              MOVS     r0,#9
00041a  49f1              LDR      r1,|L1.2016|
00041c  f8410026          STR      r0,[r1,r6,LSL #2]
000420  e008              B        |L1.1076|
                  |L1.1058|
;;;240    		else if(Frequency[i] < 1)
000422  48ef              LDR      r0,|L1.2016|
000424  f8500026          LDR      r0,[r0,r6,LSL #2]
000428  2801              CMP      r0,#1
00042a  da03              BGE      |L1.1076|
;;;241    			Frequency[i] = 1;
00042c  2001              MOVS     r0,#1
00042e  49ec              LDR      r1,|L1.2016|
000430  f8410026          STR      r0,[r1,r6,LSL #2]
                  |L1.1076|
000434  1c76              ADDS     r6,r6,#1              ;230
                  |L1.1078|
000436  2e08              CMP      r6,#8                 ;230
000438  dbca              BLT      |L1.976|
;;;242    	}
;;;243    	
;;;244    	
;;;245    	//判断当前应显示的值
;;;246    	if(Channel == 1)
00043a  48ea              LDR      r0,|L1.2020|
00043c  6800              LDR      r0,[r0,#0]  ; Channel
00043e  2801              CMP      r0,#1
000440  d105              BNE      |L1.1102|
;;;247    	{
;;;248    		tempN = Num_Pulse[0];
000442  48e6              LDR      r0,|L1.2012|
000444  6807              LDR      r7,[r0,#0]  ; Num_Pulse
;;;249    		tempF = Frequency[0];
000446  48e6              LDR      r0,|L1.2016|
000448  f8d08000          LDR      r8,[r0,#0]  ; Frequency
00044c  e01c              B        |L1.1160|
                  |L1.1102|
;;;250    	}
;;;251    	else if(Channel == 2)
00044e  48e5              LDR      r0,|L1.2020|
000450  6800              LDR      r0,[r0,#0]  ; Channel
000452  2802              CMP      r0,#2
000454  d105              BNE      |L1.1122|
;;;252    	{
;;;253    		tempN = Num_Pulse[1];
000456  48e1              LDR      r0,|L1.2012|
000458  6847              LDR      r7,[r0,#4]  ; Num_Pulse
;;;254    		tempF = Frequency[1];
00045a  48e1              LDR      r0,|L1.2016|
00045c  f8d08004          LDR      r8,[r0,#4]  ; Frequency
000460  e012              B        |L1.1160|
                  |L1.1122|
;;;255    	}
;;;256    	else if(Channel == 3)
000462  48e0              LDR      r0,|L1.2020|
000464  6800              LDR      r0,[r0,#0]  ; Channel
000466  2803              CMP      r0,#3
000468  d105              BNE      |L1.1142|
;;;257    	{
;;;258        tempN = Num_Pulse[2];
00046a  48dc              LDR      r0,|L1.2012|
00046c  6887              LDR      r7,[r0,#8]  ; Num_Pulse
;;;259    		tempF = Frequency[2];
00046e  48dc              LDR      r0,|L1.2016|
000470  f8d08008          LDR      r8,[r0,#8]  ; Frequency
000474  e008              B        |L1.1160|
                  |L1.1142|
;;;260    	}
;;;261    	else if(Channel == 4)
000476  48db              LDR      r0,|L1.2020|
000478  6800              LDR      r0,[r0,#0]  ; Channel
00047a  2804              CMP      r0,#4
00047c  d104              BNE      |L1.1160|
;;;262    	{
;;;263        tempN = Num_Pulse[3];
00047e  48d7              LDR      r0,|L1.2012|
000480  68c7              LDR      r7,[r0,#0xc]  ; Num_Pulse
;;;264    		tempF = Frequency[3];
000482  48d7              LDR      r0,|L1.2016|
000484  f8d0800c          LDR      r8,[r0,#0xc]  ; Frequency
                  |L1.1160|
;;;265    	}
;;;266    	/*
;;;267    	else if(Channel == 5)
;;;268    	{
;;;269        tempN = Num_Pulse[4];
;;;270    		tempF = Frequency[4];
;;;271    	}
;;;272    	else if(Channel == 6)
;;;273    	{
;;;274    		tempN = Num_Pulse[5];
;;;275    		tempF = Frequency[5];
;;;276    	}
;;;277    	else if(Channel == 7)
;;;278    	{
;;;279    		tempN = Num_Pulse[6];
;;;280    		tempF = Frequency[6];
;;;281    	}
;;;282    	else if(Channel == 8)
;;;283    	{
;;;284    		tempN = Num_Pulse[7];
;;;285    		tempF = Frequency[7];
;;;286    	}
;;;287    	*/
;;;288    	//显示变量值
;;;289    	switch(Val_Level)
000488  48d7              LDR      r0,|L1.2024|
00048a  6800              LDR      r0,[r0,#0]  ; Val_Level
00048c  280a              CMP      r0,#0xa
00048e  d26a              BCS      |L1.1382|
000490  e8dff000          TBB      [pc,r0]
000494  050f1923          DCB      0x05,0x0f,0x19,0x23
000498  2d37414b          DCB      0x2d,0x37,0x41,0x4b
00049c  555f              DCB      0x55,0x5f
;;;290    	{
;;;291    		case 0: TFT_ShowString(225,65,"1",BLACK);MCP_ResistanceSet(0x70);break;
00049e  2300              MOVS     r3,#0
0004a0  a2d2              ADR      r2,|L1.2028|
0004a2  2141              MOVS     r1,#0x41
0004a4  20e1              MOVS     r0,#0xe1
0004a6  f7fffffe          BL       TFT_ShowString
0004aa  2070              MOVS     r0,#0x70
0004ac  f7fffffe          BL       MCP_ResistanceSet
0004b0  e063              B        |L1.1402|
;;;292    		case 1: TFT_ShowString(225,65,"2",BLACK);MCP_ResistanceSet(0x4C);break;
0004b2  2300              MOVS     r3,#0
0004b4  a2ce              ADR      r2,|L1.2032|
0004b6  2141              MOVS     r1,#0x41
0004b8  20e1              MOVS     r0,#0xe1
0004ba  f7fffffe          BL       TFT_ShowString
0004be  204c              MOVS     r0,#0x4c
0004c0  f7fffffe          BL       MCP_ResistanceSet
0004c4  e059              B        |L1.1402|
;;;293    		case 2: TFT_ShowString(225,65,"3",BLACK);MCP_ResistanceSet(0x36);break;
0004c6  2300              MOVS     r3,#0
0004c8  a2ca              ADR      r2,|L1.2036|
0004ca  2141              MOVS     r1,#0x41
0004cc  20e1              MOVS     r0,#0xe1
0004ce  f7fffffe          BL       TFT_ShowString
0004d2  2036              MOVS     r0,#0x36
0004d4  f7fffffe          BL       MCP_ResistanceSet
0004d8  e04f              B        |L1.1402|
;;;294    		case 3: TFT_ShowString(225,65,"4",BLACK);MCP_ResistanceSet(0x27);break;
0004da  2300              MOVS     r3,#0
0004dc  a2c6              ADR      r2,|L1.2040|
0004de  2141              MOVS     r1,#0x41
0004e0  20e1              MOVS     r0,#0xe1
0004e2  f7fffffe          BL       TFT_ShowString
0004e6  2027              MOVS     r0,#0x27
0004e8  f7fffffe          BL       MCP_ResistanceSet
0004ec  e045              B        |L1.1402|
;;;295    		case 4: TFT_ShowString(225,65,"5",BLACK);MCP_ResistanceSet(0x1C);break;
0004ee  2300              MOVS     r3,#0
0004f0  a2c2              ADR      r2,|L1.2044|
0004f2  2141              MOVS     r1,#0x41
0004f4  20e1              MOVS     r0,#0xe1
0004f6  f7fffffe          BL       TFT_ShowString
0004fa  201c              MOVS     r0,#0x1c
0004fc  f7fffffe          BL       MCP_ResistanceSet
000500  e03b              B        |L1.1402|
;;;296    		case 5: TFT_ShowString(225,65,"6",BLACK);MCP_ResistanceSet(0x13);break;
000502  2300              MOVS     r3,#0
000504  a2be              ADR      r2,|L1.2048|
000506  2141              MOVS     r1,#0x41
000508  20e1              MOVS     r0,#0xe1
00050a  f7fffffe          BL       TFT_ShowString
00050e  2013              MOVS     r0,#0x13
000510  f7fffffe          BL       MCP_ResistanceSet
000514  e031              B        |L1.1402|
;;;297    		case 6: TFT_ShowString(225,65,"7",BLACK);MCP_ResistanceSet(0x0D);break;
000516  2300              MOVS     r3,#0
000518  a2ba              ADR      r2,|L1.2052|
00051a  2141              MOVS     r1,#0x41
00051c  20e1              MOVS     r0,#0xe1
00051e  f7fffffe          BL       TFT_ShowString
000522  200d              MOVS     r0,#0xd
000524  f7fffffe          BL       MCP_ResistanceSet
000528  e027              B        |L1.1402|
;;;298    		case 7: TFT_ShowString(225,65,"8",BLACK);MCP_ResistanceSet(0x07);break;
00052a  2300              MOVS     r3,#0
00052c  a2b6              ADR      r2,|L1.2056|
00052e  2141              MOVS     r1,#0x41
000530  20e1              MOVS     r0,#0xe1
000532  f7fffffe          BL       TFT_ShowString
000536  2007              MOVS     r0,#7
000538  f7fffffe          BL       MCP_ResistanceSet
00053c  e01d              B        |L1.1402|
;;;299    		case 8: TFT_ShowString(225,65,"9",BLACK);MCP_ResistanceSet(0x03);break;
00053e  2300              MOVS     r3,#0
000540  a2b2              ADR      r2,|L1.2060|
000542  2141              MOVS     r1,#0x41
000544  20e1              MOVS     r0,#0xe1
000546  f7fffffe          BL       TFT_ShowString
00054a  2003              MOVS     r0,#3
00054c  f7fffffe          BL       MCP_ResistanceSet
000550  e013              B        |L1.1402|
;;;300    		case 9: TFT_ShowString(225,65,"X",BLACK);MCP_ResistanceSet(0x01);break;
000552  2300              MOVS     r3,#0
000554  a2ae              ADR      r2,|L1.2064|
000556  2141              MOVS     r1,#0x41
000558  20e1              MOVS     r0,#0xe1
00055a  f7fffffe          BL       TFT_ShowString
00055e  2001              MOVS     r0,#1
000560  f7fffffe          BL       MCP_ResistanceSet
000564  e009              B        |L1.1402|
                  |L1.1382|
;;;301    		default: TFT_ShowString(225,65,"1",BLACK);MCP_ResistanceSet(0x70);break;
000566  2300              MOVS     r3,#0
000568  a2a0              ADR      r2,|L1.2028|
00056a  2141              MOVS     r1,#0x41
00056c  20e1              MOVS     r0,#0xe1
00056e  f7fffffe          BL       TFT_ShowString
000572  2070              MOVS     r0,#0x70
000574  f7fffffe          BL       MCP_ResistanceSet
000578  bf00              NOP      
                  |L1.1402|
00057a  bf00              NOP                            ;291
;;;302    	}
;;;303    	
;;;304    	switch(tempN)
00057c  2f0a              CMP      r7,#0xa
00057e  d256              BCS      |L1.1582|
000580  e8dff007          TBB      [pc,r7]
000584  050d151d          DCB      0x05,0x0d,0x15,0x1d
000588  252d353d          DCB      0x25,0x2d,0x35,0x3d
00058c  454d              DCB      0x45,0x4d
;;;305    	{
;;;306    		case 0: TFT_ShowString(327,65,"0",BLACK);break;
00058e  2300              MOVS     r3,#0
000590  a2a0              ADR      r2,|L1.2068|
000592  2141              MOVS     r1,#0x41
000594  f2401047          MOV      r0,#0x147
000598  f7fffffe          BL       TFT_ShowString
00059c  e04f              B        |L1.1598|
;;;307    		case 1: TFT_ShowString(327,65,"1",BLACK);break;
00059e  2300              MOVS     r3,#0
0005a0  a292              ADR      r2,|L1.2028|
0005a2  2141              MOVS     r1,#0x41
0005a4  f2401047          MOV      r0,#0x147
0005a8  f7fffffe          BL       TFT_ShowString
0005ac  e047              B        |L1.1598|
;;;308    		case 2: TFT_ShowString(327,65,"2",BLACK);break;
0005ae  2300              MOVS     r3,#0
0005b0  a28f              ADR      r2,|L1.2032|
0005b2  2141              MOVS     r1,#0x41
0005b4  f2401047          MOV      r0,#0x147
0005b8  f7fffffe          BL       TFT_ShowString
0005bc  e03f              B        |L1.1598|
;;;309    		case 3: TFT_ShowString(327,65,"3",BLACK);break;
0005be  2300              MOVS     r3,#0
0005c0  a28c              ADR      r2,|L1.2036|
0005c2  2141              MOVS     r1,#0x41
0005c4  f2401047          MOV      r0,#0x147
0005c8  f7fffffe          BL       TFT_ShowString
0005cc  e037              B        |L1.1598|
;;;310    		case 4: TFT_ShowString(327,65,"4",BLACK);break;
0005ce  2300              MOVS     r3,#0
0005d0  a289              ADR      r2,|L1.2040|
0005d2  2141              MOVS     r1,#0x41
0005d4  f2401047          MOV      r0,#0x147
0005d8  f7fffffe          BL       TFT_ShowString
0005dc  e02f              B        |L1.1598|
;;;311    		case 5: TFT_ShowString(327,65,"5",BLACK);break;
0005de  2300              MOVS     r3,#0
0005e0  a286              ADR      r2,|L1.2044|
0005e2  2141              MOVS     r1,#0x41
0005e4  f2401047          MOV      r0,#0x147
0005e8  f7fffffe          BL       TFT_ShowString
0005ec  e027              B        |L1.1598|
;;;312    		case 6: TFT_ShowString(327,65,"6",BLACK);break;
0005ee  2300              MOVS     r3,#0
0005f0  a283              ADR      r2,|L1.2048|
0005f2  2141              MOVS     r1,#0x41
0005f4  f2401047          MOV      r0,#0x147
0005f8  f7fffffe          BL       TFT_ShowString
0005fc  e01f              B        |L1.1598|
;;;313    		case 7: TFT_ShowString(327,65,"7",BLACK);break;
0005fe  2300              MOVS     r3,#0
000600  a280              ADR      r2,|L1.2052|
000602  2141              MOVS     r1,#0x41
000604  f2401047          MOV      r0,#0x147
000608  f7fffffe          BL       TFT_ShowString
00060c  e017              B        |L1.1598|
;;;314    		case 8: TFT_ShowString(327,65,"8",BLACK);break;
00060e  2300              MOVS     r3,#0
000610  a27d              ADR      r2,|L1.2056|
000612  2141              MOVS     r1,#0x41
000614  f2401047          MOV      r0,#0x147
000618  f7fffffe          BL       TFT_ShowString
00061c  e00f              B        |L1.1598|
;;;315    		case 9: TFT_ShowString(327,65,"9",BLACK);break;
00061e  2300              MOVS     r3,#0
000620  a27a              ADR      r2,|L1.2060|
000622  2141              MOVS     r1,#0x41
000624  f2401047          MOV      r0,#0x147
000628  f7fffffe          BL       TFT_ShowString
00062c  e007              B        |L1.1598|
                  |L1.1582|
;;;316    		default: TFT_ShowString(327,65,"0",BLACK);break;
00062e  2300              MOVS     r3,#0
000630  a278              ADR      r2,|L1.2068|
000632  2141              MOVS     r1,#0x41
000634  f2401047          MOV      r0,#0x147
000638  f7fffffe          BL       TFT_ShowString
00063c  bf00              NOP      
                  |L1.1598|
00063e  bf00              NOP                            ;306
;;;317    	}
;;;318    
;;;319    	switch(tempF)
000640  f1b80f0a          CMP      r8,#0xa
000644  d24e              BCS      |L1.1764|
000646  e8dff008          TBB      [pc,r8]
00064a  4d05              DCB      0x4d,0x05
00064c  0d151d25          DCB      0x0d,0x15,0x1d,0x25
000650  2d353d45          DCB      0x2d,0x35,0x3d,0x45
;;;320    	{
;;;321    		case 1: TFT_ShowString(430,65,"1",BLACK);break;
000654  2300              MOVS     r3,#0
000656  a265              ADR      r2,|L1.2028|
000658  2141              MOVS     r1,#0x41
00065a  f44f70d7          MOV      r0,#0x1ae
00065e  f7fffffe          BL       TFT_ShowString
000662  e047              B        |L1.1780|
;;;322    		case 2: TFT_ShowString(430,65,"2",BLACK);break;
000664  2300              MOVS     r3,#0
000666  a262              ADR      r2,|L1.2032|
000668  2141              MOVS     r1,#0x41
00066a  f44f70d7          MOV      r0,#0x1ae
00066e  f7fffffe          BL       TFT_ShowString
000672  e03f              B        |L1.1780|
;;;323    		case 3: TFT_ShowString(430,65,"3",BLACK);break;
000674  2300              MOVS     r3,#0
000676  a25f              ADR      r2,|L1.2036|
000678  2141              MOVS     r1,#0x41
00067a  f44f70d7          MOV      r0,#0x1ae
00067e  f7fffffe          BL       TFT_ShowString
000682  e037              B        |L1.1780|
;;;324    		case 4: TFT_ShowString(430,65,"4",BLACK);break;
000684  2300              MOVS     r3,#0
000686  a25c              ADR      r2,|L1.2040|
000688  2141              MOVS     r1,#0x41
00068a  f44f70d7          MOV      r0,#0x1ae
00068e  f7fffffe          BL       TFT_ShowString
000692  e02f              B        |L1.1780|
;;;325    		case 5: TFT_ShowString(430,65,"5",BLACK);break;
000694  2300              MOVS     r3,#0
000696  a259              ADR      r2,|L1.2044|
000698  2141              MOVS     r1,#0x41
00069a  f44f70d7          MOV      r0,#0x1ae
00069e  f7fffffe          BL       TFT_ShowString
0006a2  e027              B        |L1.1780|
;;;326    		case 6: TFT_ShowString(430,65,"6",BLACK);break;
0006a4  2300              MOVS     r3,#0
0006a6  a256              ADR      r2,|L1.2048|
0006a8  2141              MOVS     r1,#0x41
0006aa  f44f70d7          MOV      r0,#0x1ae
0006ae  f7fffffe          BL       TFT_ShowString
0006b2  e01f              B        |L1.1780|
;;;327    		case 7: TFT_ShowString(430,65,"7",BLACK);break;
0006b4  2300              MOVS     r3,#0
0006b6  a253              ADR      r2,|L1.2052|
0006b8  2141              MOVS     r1,#0x41
0006ba  f44f70d7          MOV      r0,#0x1ae
0006be  f7fffffe          BL       TFT_ShowString
0006c2  e017              B        |L1.1780|
;;;328    		case 8: TFT_ShowString(430,65,"8",BLACK);break;
0006c4  2300              MOVS     r3,#0
0006c6  a250              ADR      r2,|L1.2056|
0006c8  2141              MOVS     r1,#0x41
0006ca  f44f70d7          MOV      r0,#0x1ae
0006ce  f7fffffe          BL       TFT_ShowString
0006d2  e00f              B        |L1.1780|
;;;329    		case 9: TFT_ShowString(430,65,"9",BLACK);break;
0006d4  2300              MOVS     r3,#0
0006d6  a24d              ADR      r2,|L1.2060|
0006d8  2141              MOVS     r1,#0x41
0006da  f44f70d7          MOV      r0,#0x1ae
0006de  f7fffffe          BL       TFT_ShowString
0006e2  e007              B        |L1.1780|
                  |L1.1764|
;;;330    		default: TFT_ShowString(430,65,"1",BLACK);break;
0006e4  2300              MOVS     r3,#0
0006e6  a241              ADR      r2,|L1.2028|
0006e8  2141              MOVS     r1,#0x41
0006ea  f44f70d7          MOV      r0,#0x1ae
0006ee  f7fffffe          BL       TFT_ShowString
0006f2  bf00              NOP      
                  |L1.1780|
0006f4  bf00              NOP                            ;321
;;;331    	}
;;;332    }
0006f6  e8bd83f8          POP      {r3-r9,pc}
;;;333    /****************************************************************************
                          ENDP

                  TouchHandle_PageTwo PROC
;;;340    ****************************************************************************/ 
;;;341    void TouchHandle_PageTwo(unsigned short X,unsigned short Y)
0006fa  b538              PUSH     {r3-r5,lr}
;;;342    {
0006fc  4605              MOV      r5,r0
0006fe  460c              MOV      r4,r1
;;;343    	if(X > 345 && X < 435) //选择方案
000700  f5b57fad          CMP      r5,#0x15a
000704  db5b              BLT      |L1.1982|
000706  f5b57fd9          CMP      r5,#0x1b2
00070a  dc58              BGT      |L1.1982|
;;;344    	{
;;;345    		if(Y > 74 && Y < 137)          //选择方案A
00070c  2c4a              CMP      r4,#0x4a
00070e  dd2a              BLE      |L1.1894|
000710  2c89              CMP      r4,#0x89
000712  da28              BGE      |L1.1894|
;;;346    		{
;;;347    			Clear();
000714  f7fffffe          BL       Clear
;;;348    			Val_Level = 0;
000718  2000              MOVS     r0,#0
00071a  4933              LDR      r1,|L1.2024|
00071c  6008              STR      r0,[r1,#0]  ; Val_Level
;;;349    			Num_Pulse[0] = 1; Num_Pulse[1] = 1;
00071e  2001              MOVS     r0,#1
000720  492e              LDR      r1,|L1.2012|
000722  6008              STR      r0,[r1,#0]  ; Num_Pulse
000724  6048              STR      r0,[r1,#4]  ; Num_Pulse
;;;350    			Num_Pulse[2] = 1; Num_Pulse[3] = 1;
000726  6088              STR      r0,[r1,#8]  ; Num_Pulse
000728  60c8              STR      r0,[r1,#0xc]  ; Num_Pulse
;;;351    			Frequency[0] = 2; Frequency[1] = 2;
00072a  2002              MOVS     r0,#2
00072c  492c              LDR      r1,|L1.2016|
00072e  6008              STR      r0,[r1,#0]  ; Frequency
000730  6048              STR      r0,[r1,#4]  ; Frequency
;;;352    			Frequency[2] = 2; Frequency[3] = 2;
000732  6088              STR      r0,[r1,#8]  ; Frequency
000734  60c8              STR      r0,[r1,#0xc]  ; Frequency
;;;353    			FillColor(358,83,372,97,BLUE);
000736  201f              MOVS     r0,#0x1f
000738  2361              MOVS     r3,#0x61
00073a  f44f72ba          MOV      r2,#0x174
00073e  2153              MOVS     r1,#0x53
000740  9000              STR      r0,[sp,#0]
000742  f44f70b3          MOV      r0,#0x166
000746  f7fffffe          BL       FillColor
;;;354    			FillColor(358,167,372,181,WHITE);
00074a  f64f70ff          MOV      r0,#0xffff
00074e  23b5              MOVS     r3,#0xb5
000750  f44f72ba          MOV      r2,#0x174
000754  21a7              MOVS     r1,#0xa7
000756  9000              STR      r0,[sp,#0]
000758  f44f70b3          MOV      r0,#0x166
00075c  f7fffffe          BL       FillColor
;;;355    			ReadyMark(); 
000760  f7fffffe          BL       ReadyMark
000764  e061              B        |L1.2090|
                  |L1.1894|
;;;356    		}
;;;357    		else if(Y > 158 && Y < 221)   //选择方案B
000766  2c9e              CMP      r4,#0x9e
000768  dd5f              BLE      |L1.2090|
00076a  2cdd              CMP      r4,#0xdd
00076c  da5d              BGE      |L1.2090|
;;;358    		{
;;;359    			Clear();
00076e  f7fffffe          BL       Clear
;;;360    			Val_Level = 0;
000772  2000              MOVS     r0,#0
000774  491c              LDR      r1,|L1.2024|
000776  6008              STR      r0,[r1,#0]  ; Val_Level
;;;361    			Num_Pulse[0] = 5; Num_Pulse[1] = 5;
000778  2005              MOVS     r0,#5
00077a  4918              LDR      r1,|L1.2012|
00077c  6008              STR      r0,[r1,#0]  ; Num_Pulse
00077e  6048              STR      r0,[r1,#4]  ; Num_Pulse
;;;362    			Num_Pulse[2] = 5; Num_Pulse[3] = 5;
000780  6088              STR      r0,[r1,#8]  ; Num_Pulse
000782  60c8              STR      r0,[r1,#0xc]  ; Num_Pulse
;;;363    			Frequency[0] = 5; Frequency[1] = 5;
000784  4916              LDR      r1,|L1.2016|
000786  6008              STR      r0,[r1,#0]  ; Frequency
000788  6048              STR      r0,[r1,#4]  ; Frequency
;;;364    			Frequency[2] = 5; Frequency[3] = 5;	
00078a  6088              STR      r0,[r1,#8]  ; Frequency
00078c  60c8              STR      r0,[r1,#0xc]  ; Frequency
;;;365    			FillColor(358,83,372,97,WHITE);
00078e  f64f70ff          MOV      r0,#0xffff
000792  2361              MOVS     r3,#0x61
000794  f44f72ba          MOV      r2,#0x174
000798  2153              MOVS     r1,#0x53
00079a  9000              STR      r0,[sp,#0]
00079c  f44f70b3          MOV      r0,#0x166
0007a0  f7fffffe          BL       FillColor
;;;366    			FillColor(358,167,372,181,BLUE);			
0007a4  201f              MOVS     r0,#0x1f
0007a6  23b5              MOVS     r3,#0xb5
0007a8  f44f72ba          MOV      r2,#0x174
0007ac  21a7              MOVS     r1,#0xa7
0007ae  9000              STR      r0,[sp,#0]
0007b0  f44f70b3          MOV      r0,#0x166
0007b4  f7fffffe          BL       FillColor
;;;367    			ReadyMark();
0007b8  f7fffffe          BL       ReadyMark
0007bc  e035              B        |L1.2090|
                  |L1.1982|
;;;368    		}
;;;369    	}
;;;370    	else if(X > 214 && X < 297)  //电压
0007be  2dd6              CMP      r5,#0xd6
0007c0  dd33              BLE      |L1.2090|
0007c2  f5b57f94          CMP      r5,#0x128
0007c6  dc30              BGT      |L1.2090|
;;;371    	{
;;;372    		if(Y > 128 && Y < 180)  //变量加
0007c8  2c80              CMP      r4,#0x80
0007ca  dd25              BLE      |L1.2072|
0007cc  2cb4              CMP      r4,#0xb4
0007ce  da23              BGE      |L1.2072|
;;;373    		{
;;;374    			Val_Level ++;
0007d0  4805              LDR      r0,|L1.2024|
0007d2  6800              LDR      r0,[r0,#0]  ; Val_Level
0007d4  1c40              ADDS     r0,r0,#1
0007d6  4904              LDR      r1,|L1.2024|
0007d8  6008              STR      r0,[r1,#0]  ; Val_Level
0007da  e026              B        |L1.2090|
                  |L1.2012|
                          DCD      Num_Pulse
                  |L1.2016|
                          DCD      Frequency
                  |L1.2020|
                          DCD      Channel
                  |L1.2024|
                          DCD      Val_Level
                  |L1.2028|
0007ec  3100              DCB      "1",0
0007ee  00                DCB      0
0007ef  00                DCB      0
                  |L1.2032|
0007f0  3200              DCB      "2",0
0007f2  00                DCB      0
0007f3  00                DCB      0
                  |L1.2036|
0007f4  3300              DCB      "3",0
0007f6  00                DCB      0
0007f7  00                DCB      0
                  |L1.2040|
0007f8  3400              DCB      "4",0
0007fa  00                DCB      0
0007fb  00                DCB      0
                  |L1.2044|
0007fc  3500              DCB      "5",0
0007fe  00                DCB      0
0007ff  00                DCB      0
                  |L1.2048|
000800  3600              DCB      "6",0
000802  00                DCB      0
000803  00                DCB      0
                  |L1.2052|
000804  3700              DCB      "7",0
000806  00                DCB      0
000807  00                DCB      0
                  |L1.2056|
000808  3800              DCB      "8",0
00080a  00                DCB      0
00080b  00                DCB      0
                  |L1.2060|
00080c  3900              DCB      "9",0
00080e  00                DCB      0
00080f  00                DCB      0
                  |L1.2064|
000810  5800              DCB      "X",0
000812  00                DCB      0
000813  00                DCB      0
                  |L1.2068|
000814  3000              DCB      "0",0
000816  00                DCB      0
000817  00                DCB      0
                  |L1.2072|
;;;375    		}
;;;376    		else if(Y > 198 && Y < 250) //变量减
000818  2cc6              CMP      r4,#0xc6
00081a  dd06              BLE      |L1.2090|
00081c  2cfa              CMP      r4,#0xfa
00081e  da04              BGE      |L1.2090|
;;;377    		{
;;;378    			Val_Level --;
000820  48a8              LDR      r0,|L1.2756|
000822  6800              LDR      r0,[r0,#0]  ; Val_Level
000824  1e40              SUBS     r0,r0,#1
000826  49a7              LDR      r1,|L1.2756|
000828  6008              STR      r0,[r1,#0]  ; Val_Level
                  |L1.2090|
;;;379    		}
;;;380    	}
;;;381    
;;;382    	//限制电压等级//电压突变可能会导致问题
;;;383    	if(Val_Level > 9)
00082a  48a6              LDR      r0,|L1.2756|
00082c  6800              LDR      r0,[r0,#0]  ; Val_Level
00082e  2809              CMP      r0,#9
000830  dd03              BLE      |L1.2106|
;;;384    		Val_Level = 9;
000832  2009              MOVS     r0,#9
000834  49a3              LDR      r1,|L1.2756|
000836  6008              STR      r0,[r1,#0]  ; Val_Level
000838  e006              B        |L1.2120|
                  |L1.2106|
;;;385    	else if(Val_Level < 0)
00083a  48a2              LDR      r0,|L1.2756|
00083c  6800              LDR      r0,[r0,#0]  ; Val_Level
00083e  2800              CMP      r0,#0
000840  da02              BGE      |L1.2120|
;;;386    		Val_Level = 0;
000842  2000              MOVS     r0,#0
000844  499f              LDR      r1,|L1.2756|
000846  6008              STR      r0,[r1,#0]  ; Val_Level
                  |L1.2120|
;;;387    	
;;;388    	switch(Val_Level)
000848  489e              LDR      r0,|L1.2756|
00084a  6800              LDR      r0,[r0,#0]  ; Val_Level
00084c  280a              CMP      r0,#0xa
00084e  d27f              BCS      |L1.2384|
000850  e8dff000          TBB      [pc,r0]
000854  05111d29          DCB      0x05,0x11,0x1d,0x29
000858  35414d59          DCB      0x35,0x41,0x4d,0x59
00085c  6572              DCB      0x65,0x72
;;;389    	{
;;;390    		case 0: TFT_ShowString(280,61,"1",BLACK);MCP_ResistanceSet(0x70);break;
00085e  2300              MOVS     r3,#0
000860  f2af0278          ADR      r2,|L1.2028|
000864  213d              MOVS     r1,#0x3d
000866  f44f708c          MOV      r0,#0x118
00086a  f7fffffe          BL       TFT_ShowString
00086e  2070              MOVS     r0,#0x70
000870  f7fffffe          BL       MCP_ResistanceSet
000874  e078              B        |L1.2408|
;;;391    		case 1: TFT_ShowString(280,61,"2",BLACK);MCP_ResistanceSet(0x4C);break;
000876  2300              MOVS     r3,#0
000878  f2af028c          ADR      r2,|L1.2032|
00087c  213d              MOVS     r1,#0x3d
00087e  f44f708c          MOV      r0,#0x118
000882  f7fffffe          BL       TFT_ShowString
000886  204c              MOVS     r0,#0x4c
000888  f7fffffe          BL       MCP_ResistanceSet
00088c  e06c              B        |L1.2408|
;;;392    		case 2: TFT_ShowString(280,61,"3",BLACK);MCP_ResistanceSet(0x36);break;
00088e  2300              MOVS     r3,#0
000890  f2af02a0          ADR      r2,|L1.2036|
000894  213d              MOVS     r1,#0x3d
000896  f44f708c          MOV      r0,#0x118
00089a  f7fffffe          BL       TFT_ShowString
00089e  2036              MOVS     r0,#0x36
0008a0  f7fffffe          BL       MCP_ResistanceSet
0008a4  e060              B        |L1.2408|
;;;393    		case 3: TFT_ShowString(280,61,"4",BLACK);MCP_ResistanceSet(0x27);break;
0008a6  2300              MOVS     r3,#0
0008a8  f2af02b4          ADR      r2,|L1.2040|
0008ac  213d              MOVS     r1,#0x3d
0008ae  f44f708c          MOV      r0,#0x118
0008b2  f7fffffe          BL       TFT_ShowString
0008b6  2027              MOVS     r0,#0x27
0008b8  f7fffffe          BL       MCP_ResistanceSet
0008bc  e054              B        |L1.2408|
;;;394    		case 4: TFT_ShowString(280,61,"5",BLACK);MCP_ResistanceSet(0x1C);break;
0008be  2300              MOVS     r3,#0
0008c0  f2af02c8          ADR      r2,|L1.2044|
0008c4  213d              MOVS     r1,#0x3d
0008c6  f44f708c          MOV      r0,#0x118
0008ca  f7fffffe          BL       TFT_ShowString
0008ce  201c              MOVS     r0,#0x1c
0008d0  f7fffffe          BL       MCP_ResistanceSet
0008d4  e048              B        |L1.2408|
;;;395    		case 5: TFT_ShowString(280,61,"6",BLACK);MCP_ResistanceSet(0x13);break;
0008d6  2300              MOVS     r3,#0
0008d8  f2af02dc          ADR      r2,|L1.2048|
0008dc  213d              MOVS     r1,#0x3d
0008de  f44f708c          MOV      r0,#0x118
0008e2  f7fffffe          BL       TFT_ShowString
0008e6  2013              MOVS     r0,#0x13
0008e8  f7fffffe          BL       MCP_ResistanceSet
0008ec  e03c              B        |L1.2408|
;;;396    		case 6: TFT_ShowString(280,61,"7",BLACK);MCP_ResistanceSet(0x0D);break;
0008ee  2300              MOVS     r3,#0
0008f0  f2af02f0          ADR      r2,|L1.2052|
0008f4  213d              MOVS     r1,#0x3d
0008f6  f44f708c          MOV      r0,#0x118
0008fa  f7fffffe          BL       TFT_ShowString
0008fe  200d              MOVS     r0,#0xd
000900  f7fffffe          BL       MCP_ResistanceSet
000904  e030              B        |L1.2408|
;;;397    		case 7: TFT_ShowString(280,61,"8",BLACK);MCP_ResistanceSet(0x07);break;
000906  2300              MOVS     r3,#0
000908  f2af1204          ADR      r2,|L1.2056|
00090c  213d              MOVS     r1,#0x3d
00090e  f44f708c          MOV      r0,#0x118
000912  f7fffffe          BL       TFT_ShowString
000916  2007              MOVS     r0,#7
000918  f7fffffe          BL       MCP_ResistanceSet
00091c  e024              B        |L1.2408|
;;;398    		case 8: TFT_ShowString(280,61,"9",BLACK);MCP_ResistanceSet(0x03);break;
00091e  2300              MOVS     r3,#0
000920  f2af1218          ADR      r2,|L1.2060|
000924  213d              MOVS     r1,#0x3d
000926  f44f708c          MOV      r0,#0x118
00092a  f7fffffe          BL       TFT_ShowString
00092e  2003              MOVS     r0,#3
000930  f7fffffe          BL       MCP_ResistanceSet
000934  e018              B        |L1.2408|
000936  e00b              B        |L1.2384|
;;;399    		case 9: TFT_ShowString(280,61,"X",BLACK);MCP_ResistanceSet(0x01);break;
000938  2300              MOVS     r3,#0
00093a  f2af122c          ADR      r2,|L1.2064|
00093e  213d              MOVS     r1,#0x3d
000940  f44f708c          MOV      r0,#0x118
000944  f7fffffe          BL       TFT_ShowString
000948  2001              MOVS     r0,#1
00094a  f7fffffe          BL       MCP_ResistanceSet
00094e  e00b              B        |L1.2408|
                  |L1.2384|
;;;400    		default: TFT_ShowString(280,61,"1",BLACK);MCP_ResistanceSet(0x70);break;
000950  2300              MOVS     r3,#0
000952  f2af1268          ADR      r2,|L1.2028|
000956  213d              MOVS     r1,#0x3d
000958  f44f708c          MOV      r0,#0x118
00095c  f7fffffe          BL       TFT_ShowString
000960  2070              MOVS     r0,#0x70
000962  f7fffffe          BL       MCP_ResistanceSet
000966  bf00              NOP      
                  |L1.2408|
000968  bf00              NOP                            ;390
;;;401    	}
;;;402    }
00096a  bd38              POP      {r3-r5,pc}
;;;403    /****************************************************************************
                          ENDP

                  ShowInterfaceOne PROC
;;;410    ****************************************************************************/
;;;411    void ShowInterfaceOne(void)
00096c  b508              PUSH     {r3,lr}
;;;412    {		
;;;413    	/*//通道标志
;;;414    	FillColor(53,19,65,31,WHITE); 
;;;415    	FillColor(53,50,65,62,WHITE);
;;;416    	FillColor(53,82,65,94,WHITE);
;;;417    	FillColor(53,113,65,125,WHITE);
;;;418    	FillColor(53,145,65,157,WHITE);
;;;419    	FillColor(53,176,65,188,WHITE);
;;;420    	FillColor(53,208,65,220,WHITE);
;;;421    	FillColor(53,239,65,251,WHITE);
;;;422    	*/
;;;423    
;;;424    	TouchHandle_PageOne(100,60);
00096e  213c              MOVS     r1,#0x3c
000970  2064              MOVS     r0,#0x64
000972  f7fffffe          BL       TouchHandle_PageOne
;;;425    	
;;;426    	//变量数值
;;;427    	FillColor(220,62,238,83,WHITE);
000976  f64f70ff          MOV      r0,#0xffff
00097a  2353              MOVS     r3,#0x53
00097c  22ee              MOVS     r2,#0xee
00097e  213e              MOVS     r1,#0x3e
000980  9000              STR      r0,[sp,#0]
000982  20dc              MOVS     r0,#0xdc
000984  f7fffffe          BL       FillColor
;;;428    	FillColor(322,62,340,83,WHITE);
000988  f64f70ff          MOV      r0,#0xffff
00098c  2353              MOVS     r3,#0x53
00098e  f44f72aa          MOV      r2,#0x154
000992  213e              MOVS     r1,#0x3e
000994  9000              STR      r0,[sp,#0]
000996  f44f70a1          MOV      r0,#0x142
00099a  f7fffffe          BL       FillColor
;;;429    	FillColor(425,62,443,83,WHITE);
00099e  f64f70ff          MOV      r0,#0xffff
0009a2  2353              MOVS     r3,#0x53
0009a4  f24012bb          MOV      r2,#0x1bb
0009a8  213e              MOVS     r1,#0x3e
0009aa  9000              STR      r0,[sp,#0]
0009ac  f24010a9          MOV      r0,#0x1a9
0009b0  f7fffffe          BL       FillColor
;;;430    	TFT_ShowString(225,65,"1",BLACK);
0009b4  2300              MOVS     r3,#0
0009b6  f2af12cc          ADR      r2,|L1.2028|
0009ba  2141              MOVS     r1,#0x41
0009bc  20e1              MOVS     r0,#0xe1
0009be  f7fffffe          BL       TFT_ShowString
;;;431    	TFT_ShowString(327,65,"0",BLACK);
0009c2  2300              MOVS     r3,#0
0009c4  f2af12b4          ADR      r2,|L1.2068|
0009c8  2141              MOVS     r1,#0x41
0009ca  f2401047          MOV      r0,#0x147
0009ce  f7fffffe          BL       TFT_ShowString
;;;432    	TFT_ShowString(430,65,"1",BLACK);
0009d2  2300              MOVS     r3,#0
0009d4  f2af12ec          ADR      r2,|L1.2028|
0009d8  2141              MOVS     r1,#0x41
0009da  f44f70d7          MOV      r0,#0x1ae
0009de  f7fffffe          BL       TFT_ShowString
;;;433    }
0009e2  bd08              POP      {r3,pc}
;;;434    /****************************************************************************
                          ENDP

                  ShowInterfaceTwo PROC
;;;441    ****************************************************************************/
;;;442    void ShowInterfaceTwo(void)
0009e4  b508              PUSH     {r3,lr}
;;;443    {		
;;;444    	FillColor(358,83,372,97,BLUE);
0009e6  201f              MOVS     r0,#0x1f
0009e8  2361              MOVS     r3,#0x61
0009ea  f44f72ba          MOV      r2,#0x174
0009ee  2153              MOVS     r1,#0x53
0009f0  9000              STR      r0,[sp,#0]
0009f2  f44f70b3          MOV      r0,#0x166
0009f6  f7fffffe          BL       FillColor
;;;445    	FillColor(358,167,372,181,WHITE);
0009fa  f64f70ff          MOV      r0,#0xffff
0009fe  23b5              MOVS     r3,#0xb5
000a00  f44f72ba          MOV      r2,#0x174
000a04  21a7              MOVS     r1,#0xa7
000a06  9000              STR      r0,[sp,#0]
000a08  f44f70b3          MOV      r0,#0x166
000a0c  f7fffffe          BL       FillColor
;;;446    	FillColor(275,58,293,79,WHITE);
000a10  f64f70ff          MOV      r0,#0xffff
000a14  234f              MOVS     r3,#0x4f
000a16  f2401225          MOV      r2,#0x125
000a1a  213a              MOVS     r1,#0x3a
000a1c  9000              STR      r0,[sp,#0]
000a1e  f2401013          MOV      r0,#0x113
000a22  f7fffffe          BL       FillColor
;;;447    	TFT_ShowString(280,61,"1",BLACK);
000a26  2300              MOVS     r3,#0
000a28  f2af2240          ADR      r2,|L1.2028|
000a2c  213d              MOVS     r1,#0x3d
000a2e  f44f708c          MOV      r0,#0x118
000a32  f7fffffe          BL       TFT_ShowString
;;;448    	TouchHandle_PageTwo(400,100);
000a36  2164              MOVS     r1,#0x64
000a38  0088              LSLS     r0,r1,#2
000a3a  f7fffffe          BL       TouchHandle_PageTwo
;;;449    	//ReadyMark();
;;;450    }
000a3e  bd08              POP      {r3,pc}
;;;451    /****************************************************************************
                          ENDP

                  WorkMark PROC
;;;479    ****************************************************************************/ 
;;;480    void WorkMark()
000a40  b508              PUSH     {r3,lr}
;;;481    {
;;;482    	if(Num_Pulse[0] != 0)
000a42  4821              LDR      r0,|L1.2760|
000a44  6800              LDR      r0,[r0,#0]  ; Num_Pulse
000a46  b140              CBZ      r0,|L1.2650|
;;;483    	{	
;;;484    		FillColor(52,56,65,70,GREEN); 
000a48  f44f60fc          MOV      r0,#0x7e0
000a4c  2346              MOVS     r3,#0x46
000a4e  2241              MOVS     r2,#0x41
000a50  2138              MOVS     r1,#0x38
000a52  9000              STR      r0,[sp,#0]
000a54  2034              MOVS     r0,#0x34
000a56  f7fffffe          BL       FillColor
                  |L1.2650|
;;;485    	}
;;;486    	if(Num_Pulse[1] != 0)
000a5a  481b              LDR      r0,|L1.2760|
000a5c  6840              LDR      r0,[r0,#4]  ; Num_Pulse
000a5e  b140              CBZ      r0,|L1.2674|
;;;487    	{	
;;;488    		FillColor(52,110,65,124,GREEN);
000a60  f44f60fc          MOV      r0,#0x7e0
000a64  237c              MOVS     r3,#0x7c
000a66  2241              MOVS     r2,#0x41
000a68  216e              MOVS     r1,#0x6e
000a6a  9000              STR      r0,[sp,#0]
000a6c  2034              MOVS     r0,#0x34
000a6e  f7fffffe          BL       FillColor
                  |L1.2674|
;;;489    	}
;;;490    	if(Num_Pulse[2] != 0)
000a72  4815              LDR      r0,|L1.2760|
000a74  6880              LDR      r0,[r0,#8]  ; Num_Pulse
000a76  b140              CBZ      r0,|L1.2698|
;;;491    	{	
;;;492    		FillColor(52,164,65,178,GREEN);
000a78  f44f60fc          MOV      r0,#0x7e0
000a7c  23b2              MOVS     r3,#0xb2
000a7e  2241              MOVS     r2,#0x41
000a80  21a4              MOVS     r1,#0xa4
000a82  9000              STR      r0,[sp,#0]
000a84  2034              MOVS     r0,#0x34
000a86  f7fffffe          BL       FillColor
                  |L1.2698|
;;;493    	}
;;;494    	if(Num_Pulse[3] != 0)
000a8a  480f              LDR      r0,|L1.2760|
000a8c  68c0              LDR      r0,[r0,#0xc]  ; Num_Pulse
000a8e  b140              CBZ      r0,|L1.2722|
;;;495    	{	
;;;496    		FillColor(52,218,65,232,GREEN);
000a90  f44f60fc          MOV      r0,#0x7e0
000a94  23e8              MOVS     r3,#0xe8
000a96  2241              MOVS     r2,#0x41
000a98  21da              MOVS     r1,#0xda
000a9a  9000              STR      r0,[sp,#0]
000a9c  2034              MOVS     r0,#0x34
000a9e  f7fffffe          BL       FillColor
                  |L1.2722|
;;;497    	}
;;;498    	/*
;;;499    	if(Num_Pulse[4] != 0)
;;;500    	{	
;;;501    		FillColor(53,145,65,157,GREEN); 
;;;502    	}
;;;503    	if(Num_Pulse[5] != 0)
;;;504    	{	
;;;505    		FillColor(53,176,65,188,GREEN); 
;;;506    	}
;;;507    	if(Num_Pulse[6] != 0)
;;;508    	{	
;;;509    		FillColor(53,208,65,220,GREEN);
;;;510    	}
;;;511    	if(Num_Pulse[7] != 0)
;;;512    	{	
;;;513    		FillColor(53,239,65,251,GREEN);
;;;514    	}
;;;515    	*/
;;;516    }
000aa2  bd08              POP      {r3,pc}
;;;517    /****************************************************************************
                          ENDP

                  set_flag PROC
;;;569    ****************************************************************************/ 
;;;570    unsigned char set_flag()
000aa4  4908              LDR      r1,|L1.2760|
;;;571    {
;;;572    	unsigned char setFlag;
;;;573    	if(Num_Pulse[0] | Num_Pulse[1] | Num_Pulse[2] | Num_Pulse[3])
000aa6  6809              LDR      r1,[r1,#0]  ; Num_Pulse
000aa8  4a07              LDR      r2,|L1.2760|
000aaa  6852              LDR      r2,[r2,#4]  ; Num_Pulse
000aac  4311              ORRS     r1,r1,r2
000aae  4a06              LDR      r2,|L1.2760|
000ab0  6892              LDR      r2,[r2,#8]  ; Num_Pulse
000ab2  4311              ORRS     r1,r1,r2
000ab4  4a04              LDR      r2,|L1.2760|
000ab6  68d2              LDR      r2,[r2,#0xc]  ; Num_Pulse
000ab8  4311              ORRS     r1,r1,r2
000aba  b109              CBZ      r1,|L1.2752|
;;;574    		setFlag = 1;
000abc  2001              MOVS     r0,#1
000abe  e000              B        |L1.2754|
                  |L1.2752|
;;;575    	else
;;;576    		setFlag = 0;
000ac0  2000              MOVS     r0,#0
                  |L1.2754|
;;;577    	return setFlag;
;;;578    }
000ac2  4770              BX       lr
;;;579    
                          ENDP

                  |L1.2756|
                          DCD      Val_Level
                  |L1.2760|
                          DCD      Num_Pulse

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Num_Pulse
                          %        32
                  Frequency
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  Val_Level
                          DCD      0x00000000
                  Channel
                          DCD      0x00000001
                  Function
                          DCD      0x00000001
